{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/websocket/index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport WebSocket from 'ws';\nimport { checkIfMarketIsOpen } from '../utils/checkIfMarketIsOpen';\nimport { log } from '../utils/log';\nimport { isDev, FINNHUB_KEY, TZ_ON } from '../config';\nimport JSONDATA from '../utils/text.utils';\nimport { TickData } from '../interface';\n\ninterface PublisherEvents {\n    /**\n     * Called when WS is ready\n     */\n    onReady: () => Promise<any>;\n\n    onData: (data: TickData) => Promise<any>;\n\n    error: (error: Error) => Promise<any>;\n}\n\n/**\n * @Websocket\n * Stream real-time trades for US stocks, forex and crypto.\n * @see https://finnhub.io/docs/api#websocket-price\n */\nexport class FinnhubWS {\n    private static _instance: FinnhubWS;\n\n    private socket: WebSocket = null as any;\n\n    private symbols: string[] = [];\n\n    public static get Instance() {\n        return this._instance || (this._instance = new this());\n    }\n\n    events: PublisherEvents = {} as any;\n\n    /**\n     * @template\n     * when/on\n     */\n    public when(event: keyof PublisherEvents, func: (data?: any) => Promise<any>): void {\n        this.events[event] = func;\n    }\n\n    private constructor() {\n        this.config()\n    }\n\n    /**\n     * config\n     */\n    public config() {\n        let self = this;\n\n        if (TZ_ON) {\n            if (checkIfMarketIsOpen()) {\n                return self.init();\n            }\n            else {\n                console.log('Market is closed cannot subscribe to market data');\n                // infinity loop\n                return setTimeout(() => {\n                    console.log('FinnhubIO.config heartbeat')\n                    self.config();\n                }, 5000);\n            }\n        }\n\n        self.init();\n\n    }\n\n    /**\n     * init\n     */\n    private init() {\n        let self = this;\n\n        // Emulate for test\n        // if (process.env.NODE_ENV === 'test') {\n        //     setTimeout(async () => {\n\n        //         // Emit ready\n        //         const onReady = self.events[\"onReady\"];\n\n\n        //         if (onReady) {\n        //             await onReady();\n        //         }\n\n        //     }, 3000);\n\n        //     return;\n        // }\n\n        console.log('FinnhubIO.init startup', (FINNHUB_KEY || '').slice(0, 5));\n\n        this.socket = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_KEY}`);\n\n        this.socket.on('open', function open(this: any) {\n            const onReady = self.events[\"onReady\"];\n            if (onReady) {\n                onReady();\n            }\n        });\n\n        this.socket.on('error', (error: any) => {\n            console.log('on error connecting socket', error);\n\n            const onError = self.events[\"error\"];\n            if (onError) {\n                onError(error);\n            }\n\n            setTimeout(() => self.config(), 2000);\n            return;\n        })\n\n        interface OnSocketData {\n            data: [{ s: string; p: number; t: number, v: string; }],\n            type: string;\n        }\n\n        this.socket.on('message', async function (data: OnSocketData): Promise<void> {\n\n            // @ts-ignore\n            const parsedData: OnSocketData = JSONDATA(data);\n\n            if (!parsedData) return;\n\n            if (parsedData && parsedData.data && parsedData.data[0]) {\n                const priceItem = parsedData.data[0];\n                const symbol = priceItem.s;\n\n                const dataToSend: TickData = {\n                    price: priceItem.p,\n                    date: new Date(priceItem.t),\n                    symbol: priceItem.s,\n                    volume: +priceItem.v\n                };\n\n                const topicSymbol = symbol;\n\n                log(topicSymbol, dataToSend.price);\n\n                // If we have a publisher then send to it\n                const onData = self.events[\"onData\"];\n                if (onData) {\n                    await onData(dataToSend);\n                }\n            }\n        });\n\n    }\n\n\n    /**\n     * Add symbol\n     * @param symbol: string\n     * @returns boolean\n     */\n    public addSymbol(symbol: string): boolean {\n        console.log('addSymbol', symbol);\n\n        const onData = this.events[\"onData\"];\n\n        // If test\n        if (symbol === \"TEST\") {\n            setTimeout(() => {\n                if (onData) {\n                    const dataToSend: TickData = {\n                        price: 1000,\n                        date: new Date(),\n                        symbol: \"STQ\",\n                        volume: 0\n                    };\n                    onData(dataToSend);\n                }\n            }, 2000);\n            return true;\n        }\n\n        if (!this.socket) {\n            return false;\n        }\n\n        try {\n            const isExist = this.symbols.find(x => x === symbol);\n\n            if (isExist) {\n                return false;\n            }\n\n            // Add symbol\n            // Request market data for this symbol\n            this.symbols.push(symbol);\n            this.socket.send(JSON.stringify({ 'type': 'subscribe', symbol }));\n            console.log('Added symbol', symbol);\n            return true;\n\n        }\n        catch (error) {\n            console.log('AddSybols ', error);\n            return false;\n        }\n    }\n\n    /**\n     * Removes symbol from subscription list\n     * @param symbol \n     */\n    public removeSymbol(symbol: String): Boolean {\n        try {\n            const isExist = this.symbols.findIndex(x => x === symbol);\n            if (isExist) {\n                // Remove symbol\n                // Request unsubscribe market data for this symbol\n                this.symbols = this.symbols.filter(item => item !== symbol);\n                this.socket.send(JSON.stringify({ 'type': 'unsubscribe', symbol }));\n                return true;\n            }\n            return false;\n        }\n        catch (error) {\n            console.log('Error removing symbol', error);\n            return false;\n        }\n    }\n}\n\nexport default FinnhubWS;\n\n\n\n"]}