{"version":3,"file":"api.test.js","sourceRoot":"","sources":["../../src/api/api.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAAe;AACf,6BAA8B;AAC9B,uCAA2B;AAE3B,kDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,IAAM,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,EAAE,CAAC;AAE5D,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAEtC,IAAM,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,CAAA;AAE7C,IAAM,MAAM,GAAG,MAAM,CAAC;AAEtB,QAAQ,CAAC,YAAY,EAAE;IAEnB,EAAE,CAAC,8CAA8C,GAAG,MAAM,EAAE;;;;;oBAClD,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;oBACvB,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjE,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;oBACX,qBAAM,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAC,EAAA;;oBAAtE,OAAO,GAAG,SAA4D;oBAC5E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC/D,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;oBACzD,aAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;;;;SACnC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,GAAG,MAAM,EAAE;;;;;oBACjC,SAAS,GAAG,IAAI,IAAI,CAAC,0BAA0B,CAAC,CAAC;oBACjD,OAAO,GAAG,IAAI,IAAI,CAAC,0BAA0B,CAAC,CAAC;oBACrC,qBAAM,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAC,EAAA;;oBAAtE,OAAO,GAAG,SAA4D;oBAC5E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;oBACzD,aAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;;;;SACnC,CAAC,CAAA;IAEF,EAAE,CAAC,+BAA+B,GAAG,MAAM,EAAE;;;;;oBACnC,SAAS,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBACpC,qBAAM,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAA;;oBAAnD,KAAK,GAAG,SAA2C;oBACzD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;oBACnD,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;;SACtC,CAAC,CAAA;AAEN,CAAC,CAAC,CAAA","sourcesContent":["import 'mocha';\nimport { expect } from 'chai';\nimport FinnhubAPI from '.';\n\nimport dotenv from 'dotenv';\ndotenv.config();\n\nconst finnHubKey = process && process.env.FINNHUB_KEY || \"\";\n\nconsole.log('finnHubKey', finnHubKey);\n\nconst finnhubAPI = new FinnhubAPI(finnHubKey)\n\nconst symbol = 'AAPL';\n\ndescribe('FinnhubAPI', () => {\n\n    it('should get candles in the passed 4 days for ' + symbol, async () => {\n        const startDATE = new Date();\n        const startDate = new Date(startDATE.setDate(startDATE.getDate() - 4));\n        const endDate = new Date();\n        const candles = await finnhubAPI.getCandles(symbol, startDate, endDate, '1');\n        console.log('candles', candles && candles[candles.length - 1]);\n        console.log('candles length', candles && candles.length);\n        expect(candles).not.to.be.empty;\n    })\n\n    it('should timeout after 4 secs' + symbol, async () => {\n        const startDate = new Date('2020-03-28T04:00:00.000Z');\n        const endDate = new Date('2020-03-30T04:00:00.000Z');\n        const candles = await finnhubAPI.getCandles(symbol, startDate, endDate, '1');\n        console.log('candles', candles);\n        console.log('candles length', candles && candles.length);\n        expect(candles).not.to.be.empty;\n    })\n\n    it('should get ticks for a symbol' + symbol, async () => {\n        const startDate = new Date(\"2020-03-13 09:30:00\");\n        const ticks = await finnhubAPI.getTick(symbol, startDate);\n        console.log('ticks', ticks && ticks[ticks.length - 1]);\n        console.log('ticks length', ticks && ticks.length);\n        expect(ticks.length).not.equals(0);\n    })\n\n})"]}