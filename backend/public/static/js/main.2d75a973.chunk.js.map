{"version":3,"sources":["components/viewStockPage/bigStockChart.js","backendLink/getBackendURL.js","components/stockArrow.js","components/viewStockPage/stockCard.js","components/viewStockPage/stackChart.js","components/viewStockPage/stockNewsListItem.js","context/currentStockContext.js","components/viewStockPage/viewStock.js","context/tableContext.js","context/cryptoContext.js","components/homePage/mainTableParts/tableHead.js","components/homePage/mainTableParts/tableToolBar.js","sortDataFunctions/sortChartData.js","components/homePage/tableComponents/sparkLineGraph.js","components/homePage/tableComponents/rowChart.js","components/homePage/tableComponents/hoverSymbol.js","components/homePage/headerSearch.js","components/homePage/tableComponents/viewMoreInfo.js","components/homePage/marketStatusBar.js","components/homePage/mainTableParts/stockTable.js","components/homePage/crytobar/cryptoModalOptions.js","components/homePage/crytobar/cryptoModal.js","components/homePage/crytobar/crytpoTicker.js","components/homePage/homePage.js","components/interactivePage/interactiveChart.js","App.js","index.js"],"names":["SingleVeiw","props","history","useHistory","data","bigChartData","ohlc","volume","dataLength","length","i","push","options","navigation","bindingsClassName","yAxis","labels","align","height","resize","enabled","top","offset","stockTools","gui","tooltip","shape","headerShape","borderWidth","shadow","positioner","width","point","chart","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","series","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","Card","style","maxwidth","Box","display","p","bgcolor","flexGrow","generalData","longName","color","fontSize","exchangeTimezoneName","Button","onClick","pathname","state","stockData","variant","highcharts","Highcharts","constructorType","axios","create","baseURL","StockArrow","useState","colorChange","setColorChange","positive","setPositive","directionUp","setDirectionUp","useEffect","dollarChange","textAlign","toFixed","break","percentageChange","className","useStyles","makeStyles","root","minWidth","minHeight","bullet","margin","transform","title","pos","marginBottom","changePrices","StockCard","classes","CardContent","Typography","toUpperCase","lineHeight","cardData","regularMarketPrice","financialCurrency","justifyContent","regularMarketChange","regularMarketChangePercent","Divider","regularMarketDayRange","fiftyTwoWeekRange","regularMarketOpen","regularMarketPreviousClose","epsTrailingTwelveMonths","isNaN","trailingPE","abbreviatedMarketCap","time","date","Date","year","getFullYear","month","getMonth","day","getDate","getTime","earningsTimestampStart","StackChart","seriesData","setSeries","dates","setDates","a","GetStocks","get","params","stockName","symbol","getReccomendationResponse","recentRec","buy","hold","sell","strongBuy","strongSell","period","getRecommendations","foreColor","dataLabels","text","fontWeight","breakpoint","legend","show","position","offsetY","parse","require","StockNewsList","ListItem","direction","href","link","ListItemText","secondary","slice","CurrentStockContext","createContext","CurrentStockContextProvider","JSON","localStorage","getItem","currentStockInfo","setCurrentStockInfo","Provider","value","children","theme","background","backgroundImage","paper","padding","spacing","palette","button","ViewStock","useContext","setBigChartData","articles","setArticles","useParams","fetchChartData","response","console","log","fetchNews","getNewsResponse","getTopTenNewsArticles","financialData","displayName","goBack","size","Container","Grid","container","item","lg","Paper","abMarketCap","maxHeight","overflow","List","map","pubDate","TableContext","TableContextProvider","chartSwitch","setChartSwitch","setItem","stringify","rows","setRows","CryptoContext","CryptoContextProvider","currentCrypto","setCryto","cryptoStorage","setCryptoStorage","updateCryptoStorage","cryptoInfo","parsedCryptoDict","cryptoList","forEach","element","USD","URLlink","fetchData","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","disablePadding","label","sort","onChangeChart","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","sortDirection","TableSortLabel","active","property","event","visuallyHidden","IconButton","component","useToolbarStyles","paddingLeft","paddingRight","highlight","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","setSelected","selected","deleteRow","stayRowArray","filter","row","includes","Toolbar","Tooltip","aria-label","rearrangeData","tickerData","open","o","high","h","low","l","close","c","timeStamp","t","candleStruct","imageInfo","yahooSummaryData","dataSummary","priceChangePercent","priceChange","marketCap","currentPrice","v","stockId","toolbar","xaxis","yaxis","forceNiceScale","decimalsInFloat","onDatasetHover","highlightDataSeries","SparkLineGraph","graphData","YAxis","fill","Charting","alignItems","stockChange","HoverSymbol","CardActionArea","zIndex","CardMedia","alt","image","logo","gutterBottom","domain","HeaderSearch","currentTicker","setCurrentTicker","symbolError","setSymbolError","setMarketStatus","disablingAdd","setDisablingAdd","abbreviateNumber","newValue","suffixNum","floor","shortValue","precision","parseFloat","pow","toPrecision","replace","backendURL","marketStatusReponse","marketStatusDesicion","getStatus","onSubmitForm","preventDefault","submit","trim","now","current","parseInt","post","user_id","ticker","from","to","addingResponse","responseData","prevRows","sharePrice","onSubmit","noValidate","autoComplete","TextField","error","e","target","ButtonGroup","disabled","viewStock","stringRow","MarketStatus","marketStatus","marginTop","backgroundAttachment","backgroundPosition","paddingBottom","table","border","LinearProgress","tableChart","flexDirection","clip","EnhancedTable","React","setOrder","setOrderBy","page","setPage","dense","setDense","setChartWidth","rowsPerPage","setRowsPerPage","loading","setLoading","descendingComparator","b","rowStorage","stockSymbols","list","totalStockInfoResponse","totalModifiedStockData","formattedRows","emptyRows","optionsCursorTrueWithMargin","followCursor","shiftX","shiftY","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","isItemSelected","indexOf","labelId","Grow","in","transformOrigin","timeout","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","uuidv4","scope","Trigger","Hover","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","formControl","chips","flexWrap","chip","noLabel","MenuProps","PaperProps","ITEM_HEIGHT","getStyles","cryptoName","typography","fontWeightRegular","fontWeightMedium","names","ModalOptions","setAdd","deleting","setDelete","textDelete","setTextDelete","useTheme","setCryptoName","cryp","crypto","borderRadius","marginLeft","FormControl","InputLabel","Select","input","Input","MenuItem","prevState","modal","boxShadow","shadows","TransitionsModal","openModal","setOpen","Modal","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","StockTicker","FROMSYMBOL","PRICE","Number","CHANGEPCTDAY","CHANGEDAY","HomePage","indicators","Highchartsd","dragPanes","annotationsAdvanced","priceIndicator","fullScreen","InteractiveChart","useRef","location","App","exact","path","InteractiveBigChart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d75a973.chunk.js","sourcesContent":["import React from 'react'\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card'\nimport {useParams, useHistory} from 'react-router-dom'\n\nconst SingleVeiw = (props) => {\nconst history = useHistory()\nvar data = props.bigChartData\n  \n  var ohlc = [],\n    volume = [],\n    dataLength = data.length,\n    groupingUnits = [\n      [\n        \"week\", // unit name\n        [1] // allowed multiples\n      ],\n      [\"month\", [1, 2, 3, 4, 6]]\n    ],\n    i = 0;\n  \n  for (i; i < dataLength; i += 1) {\n    ohlc.push([\n      data[i][0], // the date\n      data[i][1], // open\n      data[i][2], // high\n      data[i][3], // low\n      data[i][4] // close\n    ]);\n  \n    volume.push([\n      data[i][0], // the date\n      data[i][5] // the volume\n    ]);\n  }\n\n  // Highcharts.stockChart('container',\n  const options ={\n    navigation: {\n      bindingsClassName: 'chart-12'\n    },\n    yAxis: [{\n      labels: {\n        align: 'left'\n      },\n      height: '80%',\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    stockTools: {\n      gui: {\n          enabled: false // disable the built-in toolbar\n      }\n    },\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n        var chart = this.chart,\n          position;\n  \n        if (point.isHeader) {\n          position = {\n            x: Math.max(\n              // Left side limit\n              chart.plotLeft,\n              Math.min(\n                point.plotX + chart.plotLeft - width / 2,\n                // Right side limit\n                chart.chartWidth - width - chart.marginRight\n              )\n            ),\n            y: point.plotY\n          };\n        } else {\n          position = {\n            x: point.series.chart.plotLeft,\n            y: point.series.yAxis.top - chart.plotTop\n          };\n        }\n  \n        return position;\n      }\n    },\n    series: [{\n      type: 'ohlc',\n      id: `${props.name}-ohlc`,\n      name: `${props.name} Stock Price`,\n      data: ohlc\n    }, {\n      type: 'column',\n      id: `${props.name}-volume`,\n      name: `${props.name} Volume`,\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 1500\n        },\n        chartOptions: {\n          rangeSelector: {\n            inputEnabled: false\n          }\n        }\n      }]\n    }\n  };\n\n  const interactWithChart = () => {\n    history.push({\n        pathname: `/view/interactive/${props.id}/${props.name}`,\n        state: {stockData: props.bigChartData}\n      })\n  }\n  \n    return (\n      <Card>\n        <div style={{maxwidth:\"1500px\", height:\"auto\"}}>\n          <div style={{ width: '100%' }}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n              <Box p={2} flexGrow={1}  bgcolor=\"grey.300\">\n                {props.generalData.longName} ({props.name}) <span style={{color: \"rgba(0, 0, 0, 0.54)\", fontSize: \"14px\"}}>{props.generalData.exchangeTimezoneName} </span>\n              </Box>\n              <Box p={1} bgcolor=\"grey.300\">\n                <Button onClick={interactWithChart} variant=\"outlined\" color=\"primary\">Switch to Analysis Mode</Button>\n              </Box>\n            </Box>\n          </div>\n            <HighchartsReact\n                highcharts={Highcharts}\n                constructorType={'stockChart'}\n                options={options}\n                />\n        </div>\n      </Card>\n    )\n}\n\nexport default SingleVeiw","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"\"\n});\n\n// \"http://localhost:5000/\"","import React, {useState, useEffect} from 'react'\n\nconst StockArrow = (props) => {\n    const [ colorChange, setColorChange] = useState('green')\n    const [ positive, setPositive] = useState('+')\n    const [ directionUp, setDirectionUp] = useState(true);\n\n    useEffect(() => {\n        if(props.dollarChange > 0) {\n            setColorChange('green');\n            setPositive('+');\n            setDirectionUp(true)\n        } else {\n            setColorChange('red');\n            setPositive('');\n            setDirectionUp(false)\n        }\n    }, [])\n    \n    return (\n        <div style={{color: colorChange, textAlign: \"center\"}}>\n            <span>\n                {positive + props.dollarChange.toFixed(2)}\n                {props.break ? (<br></br>) : (false)}\n                {'(' + props.percentageChange.toFixed(2) + '%' + ') '} \n                {directionUp ? <i className=\"fas fa-caret-up\"></i> : <i className=\"fas fa-caret-down\"></i>}\n            </span>\n        </div>\n    )\n}\n\nexport default StockArrow;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../../styles/cardStyle.css'\nimport Divider from '@material-ui/core/Divider';\nimport StockPriceDisplay from '../stockArrow'\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      minHeight: 478,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    changePrices: {\n      color: 'green'\n    },\n  });\n\n\nconst StockCard = (props) => {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const getTime = (time) => {\n      let date = new Date(time * 1000);\n      var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n      var year = date.getFullYear();\n      var month = months[date.getMonth()];\n      var day = date.getDate();\n      let fullDate = `${month} ${day}, ${year}`\n      return fullDate;\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                    <Typography style={{textAlign: \"center\"}} variant=\"h3\">\n                      {props.name.toUpperCase()}\n                    </Typography>\n                    <Typography style={{lineHeight: \"1\"}} variant=\"h3\">\n                        {props.cardData.regularMarketPrice.toFixed(2)} <span style={{color: \"rgba(0, 0, 0, 0.54)\", fontSize: \"16px\"}}>({props.cardData.financialCurrency})</span>\n                    </Typography>\n                    <div>\n                    <div style={{lineHeight: \"1\", display: \"flex\", justifyContent: \"start\"}} >\n                      <StockPriceDisplay break={false} dollarChange={props.cardData.regularMarketChange} percentageChange={props.cardData.regularMarketChangePercent}/>\n                    </div>\n                </div>\n                <br/>\n                <h4>Summary</h4>\n                <Divider/>\n                <div className=\"cardContainer\">\n                    <div className=\"item\">Days Range:\n                    <div>{props.cardData.regularMarketDayRange}</div></div>\n                    <div className=\"item\">52 Week Range:\n                    <div >{props.cardData.fiftyTwoWeekRange}</div></div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div className=\"item\">Open: {props.cardData.regularMarketOpen}</div>\n                    <div className=\"item\">Previous Close: {props.cardData.regularMarketPreviousClose} </div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div  className=\"item\">Trailing 12 mo. EPS: {props.cardData.epsTrailingTwelveMonths.toFixed(2)}</div>\n                    <div  className=\"item\">Trailing PE: {!isNaN(props.cardData.trailingPE) ? (props.cardData.trailingPE.toFixed(2)) : (props.cardData.trailingPE)}</div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div className=\"item\">MarketCap: {props.abbreviatedMarketCap} </div>\n                    <div className=\"item\">Earnings Date: {getTime(props.cardData.earningsTimestampStart)} </div>\n                </div>\n            </CardContent>\n        </Card>\n  );\n}\n\nexport default StockCard\n","import ReactApexChart from 'react-apexcharts'\nimport React, { useState,useEffect } from 'react'\nimport GetStocks from '../../backendLink/getBackendURL'\nimport { withTheme } from '@material-ui/core'\n\nconst StackChart = (props) => {\n    const [seriesData, setSeries] = useState([0])\n    const [dates, setDates] = useState([])\n\n    useEffect(() => {\n        const getRecommendations = async () => {\n            let getReccomendationResponse = await GetStocks.get('/singlestock/reccomendation', {\n              params: {\n                stockName: props.symbol\n              }\n            })\n            let recentRec = getReccomendationResponse.data[0]\n            setSeries([recentRec.buy, recentRec.hold, recentRec.sell, recentRec.strongBuy,  recentRec.strongSell])\n            setDates(recentRec.period)\n        }\n        getRecommendations()\n    }, [])\n    \n    var state = {\n          \n        series: seriesData,\n        options: {\n          chart: {\n            foreColor: 'white',\n            width: 380,\n          },\n          dataLabels: {\n            enabled: false\n          },\n          title: {\n            text: `Stock Reccomendation as of ${dates}`,\n            style: {\n                fontSize:  '20px',\n                fontWeight:  'bold',\n                color:  'white'\n              },\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 200\n              },\n              legend: {\n                color: \"white\",\n                show: true\n              }\n            }\n          }],\n          labels: [\"StrongBuy\", \"Buy\", \"Hold\", \"Sell\", \"StrongSell\"],\n          legend: {\n            color: \"white\",\n            position: 'right',\n            offsetY: 0,\n            height: 230,\n          }\n        },\n      \n      \n      };\n    \n    \n\n    return (\n        <div id=\"chart\">\n            <ReactApexChart options={state.options} series={state.series} height={404} type=\"donut\" />\n        </div>\n    )\n}\n\nexport default StackChart   ","import React, { Fragment } from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Container, Divider } from '@material-ui/core';\nvar parse = require('html-react-parser');\n\nconst StockNewsList = (props) => {\n    const trimDate = (date) => {\n        return date.slice(0, -13)\n    }\n    return (\n        <Fragment>\n            <ListItem>\n                <div style={{direction: \"column\"}}>\n                    <a href={props.link} >{parse(props.title)}</a>\n                </div>\n                <ListItemText secondary={trimDate(props.date)} />\n            </ListItem>\n            <Divider/>\n        </Fragment>\n    )\n}\n\nexport default StockNewsList;\n","import React, {useState, createContext} from 'react';\n\nexport const CurrentStockContext = createContext();\n\nexport const CurrentStockContextProvider = props => {\n   const [currentStockInfo, setCurrentStockInfo] = useState(JSON.parse(localStorage.getItem('currentStockInfo')))\n   \n   return (\n       <CurrentStockContext.Provider value={{currentStockInfo, setCurrentStockInfo}}>\n           {props.children}\n       </CurrentStockContext.Provider>\n   )\n}\n\n","import React, {Fragment, useState, useEffect, useContext} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport BigStockChart from './bigStockChart';\nimport GetStocks from '../../backendLink/getBackendURL'\nimport Button from '@material-ui/core/Button';\nimport { Container, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport StockCard from './stockCard';\nimport List from '@material-ui/core/List';\nimport Box from '@material-ui/core/Box'\nimport StackChart from './stackChart'\nimport StockNewsListItem from './stockNewsListItem.js'\nimport {CurrentStockContext} from '../../context/currentStockContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    background: '#0C6BA7',\n    backgroundImage: \"radial-gradient(circle, #211f1f, #292626, #302d2f, #373437, #3d3c40, #414249, #444953, #45505c, #415869, #3a6074, #2d697e, #147287)\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    background: '#022B3C'\n  },\n  button: {\n    margin: \"20px\",\n    color: \"#C3EBF6\",\n    background: \"rgb(64,80,181)\"\n  }\n}));\n\n\nconst ViewStock = () => {\n    const history = useHistory()\n    const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n    const [bigChartData, setBigChartData] = useState([]);\n    const [articles, setArticles] = useState([])\n    const {id, name} = useParams();\n    const classes = useStyles();\n\n\n\n    const onHandleBack = () => {\n        history.goBack();\n    }\n\n    useEffect( () => {\n        // let currentStockRow = JSON.parse(localStorage.getItem(\"currentStockInfo\"))\n        // setCurrentStockInfo(currentStockRow)\n        //setting up BigChart data\n        const fetchChartData = async (id, name) => {\n            try {\n                let response = await GetStocks.get(`/singlestock/${id}/${name}`)\n                setBigChartData(response.data)\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        //fetching News\n        const fetchNews = async (name) => {\n            try{\n            const getNewsResponse = await GetStocks.get('/singlestock/news', {\n                params: { stockName: name}\n            })\n            let getTopTenNewsArticles = (getNewsResponse.data).slice(0, 10)\n            setArticles(getTopTenNewsArticles)\n            }\n            catch (err)\n            {\n                console.log(\"No news\")\n            }\n        }\n        fetchChartData(id, name)\n        fetchNews(currentStockInfo.financialData.displayName)\n    }, [])\n    \n\n    return (\n        <div className={classes.root}>\n            <Button  onClick={onHandleBack} className={classes.button} variant=\"contained\" size=\"large\" color=\"black\">\n                <i className=\"fa-lg fas fa-angle-double-left\"></i>\n            </Button>   \n            <Container style={{maxWidth: \"1500px\"}}>\n                <Grid container spacing={3}>\n                    <Grid item lg={8}>\n                        <Paper className={classes.paper}>\n                            <BigStockChart id={id} name={name} generalData={currentStockInfo.financialData} bigChartData={bigChartData}/>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={4}>\n                        <Paper className={classes.paper}>\n                            <StockCard name={name} abbreviatedMarketCap={currentStockInfo.abMarketCap} cardData={currentStockInfo.financialData}/>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={6}>\n                        <Paper className={classes.paper}>\n                            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                                <Box p={2} flexGrow={1}  bgcolor=\"grey.300\">\n                                    Recent News\n                                </Box>\n                            </Box>\n                            {/* <StockNewsList/> */}\n                            <Paper style={{maxHeight: 330, overflow: 'auto'}}>\n                                <List>\n                                    {\n                                        articles && articles.map(item => (\n                                        <StockNewsListItem title={item.title} link={item.link} date={item.pubDate}/>))\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={6}>\n                        <Paper className={classes.paper}>\n                            <StackChart symbol={name}/>\n                        </Paper>\n                    </Grid>\n                    </Grid>\n            </Container>\n            <Container>\n\n            </Container>\n            \n        </div>\n    )\n}\n\nexport default ViewStock\n","import React, {useState, createContext, useEffect} from 'react';\n\nexport const TableContext = createContext();\n\nexport const TableContextProvider = props => {\n    function createData(symbol, stockChange, marketCap, sharePrice, chart) {\n        return { symbol, stockChange, marketCap, sharePrice, chart};\n    }\n    const checkRows = () => {\n        if(JSON.parse(localStorage.getItem('StockRows') === null)) {\n            localStorage.setItem('StockRows', JSON.stringify([]))\n            return []\n        } else {\n            return JSON.parse(localStorage.getItem('StockRows'))\n        }\n    }\n    const [chartSwitch, setChartSwitch] = useState('Spark Chart')\n    const [rows, setRows] = useState(checkRows())\n   useEffect(() => {\n       localStorage.setItem('StockRows', JSON.stringify(rows))\n   }, [rows])\n\n   return (\n       <TableContext.Provider value={{rows, setRows, chartSwitch, setChartSwitch}}>\n           {props.children}\n       </TableContext.Provider>\n   )\n}\n","import React, {useState, createContext, useEffect} from 'react';\nimport URLlink from '../backendLink/getBackendURL'\n\nexport const CryptoContext = createContext();\n\n\nexport const CryptoContextProvider = props => {\n\n    const checkCurrentCrypto = () => {\n        if(((localStorage.getItem('currentCryptoName') === null))) {\n            localStorage.setItem('currentCryptoName', JSON.stringify(['BTC', 'ETH', 'USDT', 'DASH', 'XRP', 'ADA']))\n            return ['BTC', 'ETH', 'USDT', 'DASH', 'XRP', 'ADA']\n        } else {\n            return JSON.parse(localStorage.getItem('currentCryptoName')); \n        }\n    }\n\n    const [currentCrypto, setCryto] = useState(checkCurrentCrypto())\n    //     const stickyValue = localStorage.getItem('currentCryptoName');\n    //     const send = JSON.parse(stickyValue)\n    //     console.log(send)\n    //     return stickyValue !== null\n    //       ? send\n    //       : ['BTC', 'ETH', 'USDT', 'DASH'];\n    //   })\n    const [cryptoStorage, setCryptoStorage] = useState([{}])\n\n    const updateCryptoStorage = async () => {\n        let cryptoInfo = localStorage.getItem('currentCryptoInfo')\n        let parsedCryptoDict = JSON.parse(cryptoInfo)\n        let cryptoList= []\n        currentCrypto.forEach(element => (\n           cryptoList.push(parsedCryptoDict[element].USD)\n        ));\n        setCryptoStorage(cryptoList)\n    }\n    useEffect(() => {\n        async function fetchData() {\n\n            const response = await URLlink.get('/getCrypto');\n            localStorage.setItem('currentCryptoInfo', JSON.stringify(response.data))\n            await updateCryptoStorage();\n          }\n  \n          fetchData();\n    }, [])\n\n    useEffect(() => {\n        const currentStorageNames = localStorage.getItem('currentCryptoName');\n        if(currentStorageNames !== null && localStorage.getItem('currentCryptoInfo') !== null) {\n            localStorage.setItem('currentCryptoName', JSON.stringify(currentCrypto))\n            updateCryptoStorage();\n            // let  = localStorage.getItem('currentCryptoInfo') \n            // let j = JSON.parse(hello)\n            // let list = []\n            // currentCrypto.forEach(element => (\n            //     list.push(j[element].USD)\n            // ));\n            // setCryptoStorage(list)\n        }\n    }, [currentCrypto])\n\n\n    \n    return (\n        <CryptoContext.Provider value={{currentCrypto, setCryto, cryptoStorage, setCryptoStorage}}>\n            {props.children}\n        </CryptoContext.Provider>\n    )\n}\n\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {TableContext} from './../../../context/tableContext'\nimport IconButton from '@material-ui/core/IconButton';\n\nfunction EnhancedTableHead(props) {\n  const {rows, setRows, chartSwitch, setChartSwitch} = useContext(TableContext)\n    // number of index selected \n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n    \n    const headCells = [\n      { id: 'symbol', direction: 'left', disablePadding: false, label: 'Stock Ticker',  sort: true},\n      { id: 'stockChange', direction: 'right', disablePadding: false, label: 'Day Change', sort: true },\n      { id: 'marketCap', direction: 'right', disablePadding: false, label: 'marketCap (USD) ', sort: true},\n      { id: 'sharePrice', direction: 'right', disablePadding: false, label: 'Share Price (USD)',sort: true},\n      { id: 'chart', direction: 'center', disablePadding: true, label: `${chartSwitch}`, sort: false },\n      { id: 'link', direction: 'center', disablePadding: true, label: 'Info', sort: false}\n    ];\n  \n  const onChangeChart = () => {\n    if(chartSwitch == 'Spark Chart') {\n      setChartSwitch('OHLC Chart')\n    } else {\n      setChartSwitch('Spark Chart')\n    }\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all symbols' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.direction}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            { headCell.sort ? (\n                <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : 'asc'}\n                    onClick={createSortHandler(headCell.id)}\n                >\n                    {headCell.label}\n                    {orderBy === headCell.id ? (\n                    <span className={classes.visuallyHidden}>\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </span>\n                    ) : null}\n                </TableSortLabel>\n                ) : headCell.id !== 'link' ? (<a onClick={onChangeChart}><IconButton color=\"primary\" component=\"span\">\n                <i className=\"far fa-chart-bar\"></i> \n              </IconButton> {headCell.label}</a>) : (\n              <div>{headCell.label}</div>)\n            }\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {TableContext} from './../../../context/tableContext';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1)\n    },\n    highlight:\n        theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n    button: {\n        color: \"white\"\n    }\n    }));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {rows, setRows} = useContext(TableContext)\n    const {setSelected, selected, numSelected } = props;\n\n    const deleteRow = async () => {\n        console.log(selected);\n        const stayRowArray = props.rows.filter(row => \n            !selected.includes(row.symbol)\n        )\n        setRows(stayRowArray);\n        setSelected([])\n    }\n\n    return (\n        <Toolbar \n        // style={{marginTop: '60px'}}\n        // className={clsx(classes.root, {\n        //     [classes.highlight]: numSelected > 0,\n        // })}\n        >\n        {numSelected > 0 ? (\n            <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n            </Typography>\n        ) : (\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n            Stocks\n            </Typography>\n        )}\n        {/* button for Deleting   */}\n        {numSelected > 0 ? (\n            <Tooltip title=\"Delete\">\n                <IconButton className={classes.button} onClick={deleteRow} aria-label=\"delete\">\n                    <DeleteIcon />\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <Tooltip title=\"Filter list\">\n            <IconButton className={classes.button} aria-label=\"filter list\">\n                <FilterListIcon />\n            </IconButton>\n            </Tooltip>\n        )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;\n","// uncomment this is for yahoo finance chart data initial stock aquiring\n\n// const calcDollarChange = (pricesArray) => {\n//   console.log(pricesArray[1].y[3] + \" \" + \"- \" + pricesArray[0].y[3])\n//   let dayDollarChange = pricesArray[1].y[3] - pricesArray[0].y[3]\n//   console.log(\"calcDollarChange\", dayDollarChange)\n//   return dayDollarChange\n// }\n\n// const calcPercChange = (pricesArray) => {\n//   console.log(pricesArray)\n//   console.log(pricesArray[1].y[3] + \" \" + \"/ \" + pricesArray[0].y[3])\n//   let dayDollarChange = (((pricesArray[1].y[3] / pricesArray[0].y[3]) - 1)*100)\n//   return dayDollarChange\n// }\n\n// const getCurrentPrice = (pricesArray) => {\n//   console.log(\"calcCurrentChange\", pricesArray)\n//   return pricesArray[0].y[3];\n// }\n\nexport const rearrangeData = (tickerData) => {\n    let open = tickerData.o\n    let high = tickerData.h\n    let low = tickerData.l\n    let close = tickerData.c\n    var timeStamp = tickerData.t\n\n    // using finhub for month data\n    let candleStruct = open.map((o, i) => ({\n      x: new Date(timeStamp[i] * 1000),\n      y: [o, high[i], low[i], close[i]]\n    }));\n    \n    // let recentMonthData = candleStruct.slice(-22)\n    \n    // console.log(\"zip listing\",candleStruct)\n\n\n    let pracData = {\n      //uncomment this is for yahoo finance chart data initial stock aquiring\n\n      // diffDayChange: calcDollarChange(candleStruct.slice(-2)),\n      // currentPrice: getCurrentPrice(candleStruct.slice(-1)),\n      // dayPercChange: calcPercChange(candleStruct.slice(-2)),\n      // oneYearData: candleStruct,\n\n      //comment out if using yahoo as initial data aquiring\n      imageInfo: tickerData.imageInfo,\n      yahooSummaryData: tickerData.dataSummary,\n      priceChangePercent: tickerData.dataSummary.regularMarketChangePercent,\n      priceChange: tickerData.dataSummary.regularMarketChange, \n      marketCap: tickerData.dataSummary.marketCap,\n      currentPrice: tickerData.dataSummary.regularMarketPrice,\n      volume: tickerData.v,\n      symbol: tickerData.symbol,\n      stockId: tickerData.stockId,\n      series: [{\n        data: candleStruct\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false,\n          },\n          type: 'candlestick',\n          height: 350\n        },\n        // title: {\n        //   text: `${tickerData.symbol}`,\n        //   align: 'left'\n        // },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          forceNiceScale: true,\n          // floating: true,\n          // decimalsInFloat: true,\n          // floating: true,\n          decimalsInFloat: true,\n \n          tooltip: {\n            onDatasetHover: {\n              highlightDataSeries: false,\n          },\n            show: false,\n            enabled: false,\n          }\n          \n        }\n      },\n    };\n    // for(let i = 0; i < candleStruct.length; i++) {\n    //   pracData.series[0].data.push(candleStruct[i])\n    // }\n\n    return pracData;\n  }\n// exports.module = ModifyDataForChart;\n\n// export \n// module.exports = {\n//   test: ModifyDataForChart = (tickerData) => {\n//     let a = tickerData.o\n//     let b = tickerData.h\n//     let c = tickerData.l\n//     let d = tickerData.c\n//     var t = tickerData.t\n//     console.log(a)\n//     console.log(tickerData)\n//     let candleStruct = a.map((e, i) => ({\n//       x: new Date(t[i] * 1000),\n//       y: [e, b[i], c[i], d[i]]\n//     }));\n\n//     // console.log(\"zip listing\",candleStruct)\n//     let pracData = {\n//       stockId: tickerData.stockId,\n//       series: [{\n//         data: candleStruct\n//       }],\n//       options: {\n//         chart: {\n//           type: 'candlestick',\n//           height: 350\n//         },\n//         title: {\n//           text: `${tickerData.symbol}`,\n//           align: 'left'\n//         },\n//         xaxis: {\n//           type: 'datetime'\n//         },\n//         yaxis: {\n//           tooltip: {\n//             enabled: true\n//           }\n//         }\n//       },\n//     };\n//     // for(let i = 0; i < candleStruct.length; i++) {\n//     //   pracData.series[0].data.push(candleStruct[i])\n//     // }\n\n//     return pracData;\n//   }\n// }","import React, {useState} from 'react'\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine, SparklinesSpots } from 'react-sparklines';\n\n\nfunction SparkLineGraph(props) {\n    // const [color, setColor] = useState('grey')\n    const getYAxisData = () => {\n        let seriesData = props.data.chart.series[0].data\n        const chartYAxisArray = seriesData.map(YAxis => YAxis.y).map(close => close[3])\n        // console.log(chartYAxisArray)\n        return chartYAxisArray;\n    }\n    \n    // const colorIndicator = () => {\n    //     setColor('green')\n    // }\n    return (\n        <div className=\"sparkStyle\">\n             {/* {colorIndicator()} */}\n            <Sparklines data={getYAxisData(props.graphData)} margin={5} >\n                <SparklinesLine color={props.color} style={{ fill: props.color }} />\n                <SparklinesSpots  style={{ fill: props.color }}/>\n            </Sparklines>\n        </div>\n    )\n}\n\nexport default SparkLineGraph\n","import React, {Fragment, useState,Component, useEffect, useContext} from 'react'\nimport Chart from 'react-apexcharts'\nimport {CurrentStockContext} from './../../../context/currentStockContext';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport SparkLineGraph from './sparkLineGraph'\nimport {TableContext} from './../../../context/tableContext'\nconst Charting = (props) => {\n    const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n    const {rows, setRows, chartSwitch, setChartSwitch} = useContext(TableContext)\n    let history = useHistory()\n    \n    const viewStock = async (id, name, row) => {\n    let stringRow = JSON.stringify(row)\n    localStorage.setItem(\"currentStockInfo\", stringRow);\n    setCurrentStockInfo(JSON.parse(localStorage.getItem('currentStockInfo')))\n    history.push({\n        pathname: `/view/${id}/${name}`,\n        financialData: props.financialData,\n        abbreviatedMarketCap: props.abbreviatedMarketCap\n    })\n    }\n     const colorIndicator = () => {\n        if (props.row.stockChange >= 0) {\n            return 'green';\n        } else {\n            return 'red';\n        }\n    }\nreturn (\n\n    <div style={{display: \"flex\", alignItems: \"center\", padding: \"0\", margin: \"10\"}}>\n        {chartSwitch == 'Spark Chart' ? (<SparkLineGraph data={props.row} color={colorIndicator()}/>) :\n         <Chart options={props.data.options} series={props.data.series} type=\"candlestick\" height={100} width={300} /> \n        }\n          \n        {/* <Chart options={props.data.options} series={props.data.series} type=\"candlestick\" height={100} width={300} /> */}\n        {/* <Button size=\"medium\" onClick={()=> viewStock(props.id, props.name, props.row)}> More Info</Button> */}\n    </div>\n    )\n}\n\n\n\nexport default Charting;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 200,\n  },\n});\n\n\n\nconst HoverSymbol = (props) => {\n    const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea style={{zIndex: \"1000\"}}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"90\"\n          image={props.image.logo}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent style={{zIndex: \"1000\"}}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.image.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.image.domain}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default HoverSymbol\n","import React, {useContext, useState, useEffect} from 'react';\nimport {TextField, Button} from '@material-ui/core/';\nimport Container from '@material-ui/core/Container';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {rearrangeData} from './../../sortDataFunctions/sortChartData';\nimport {TableContext} from './../../context/tableContext';\nimport backendURL from './../../backendLink/getBackendURL';\nimport './../../styles/style.css'\nimport SparkLineGraph from './tableComponents/sparkLineGraph'\n\nconst HeaderSearch = () => {\n    const {rows, setRows} = useContext(TableContext);\n    const [currentTicker, setCurrentTicker] = useState('');\n    const [symbolError, setSymbolError] = useState(false);\n    const [marketStatus, setMarketStatus] = useState(false);\n    const [disablingAdd, setDisablingAdd] = useState(false)\n  \n\n    // the function that grabs the rows\n    function createData(symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap) {\n      return { symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap};\n    }\n\n    useEffect(() => {\n      const getStatus = async () => {\n        const marketStatusReponse = await backendURL.get('/checkMarketStatus');\n        const marketStatusDesicion = marketStatusReponse.data \n        if(marketStatusDesicion) {\n            setMarketStatus(true)\n          } else {\n            setMarketStatus(false)\n          }\n      }\n      getStatus();\n    }, [])\n\n    function abbreviateNumber(value) {\n        let newValue = value;\n        if (value >= 1000) {\n            let suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n            let suffixNum = Math.floor( (\"\"+value).length/3 );\n            let shortValue = '';\n            for (let precision = 2; precision >= 1; precision--) {\n                shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\n                let dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\n                if (dotLessShortValue.length <= 2) { break; }\n            }\n            if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\n            newValue = shortValue+suffixes[suffixNum];\n        }\n        return newValue;\n    }\n\n    const onSubmitForm = async (event) => {\n        event.preventDefault();\n  \n        let submit = true;\n        rows.map(row => {\n          if((row.symbol) == currentTicker.trim()){\n            submit = false;\n          }\n        })\n        if(submit) {\n          setDisablingAdd(true);\n          let now = new Date().getTime()\n          let current = parseInt(now/1000)\n          let month = current - (86400 * 31)\n          //vestigal adding of uneeded user_id\n          const addingResponse = await backendURL.post('/', {\n            user_id: '1',\n            ticker: currentTicker,\n            from: month,\n            to: current\n          })\n  \n          if(addingResponse.data.length == 0) {\n            console.log(\"ticker not supported\")\n            setSymbolError(true)\n          } else {\n            setSymbolError(false)\n            const responseData = rearrangeData(addingResponse.data)\n            setRows((prevRows) => \n              [...prevRows,...[createData(`${currentTicker}`,\n                responseData.priceChange,\n                responseData.marketCap,\n                responseData.currentPrice,\n                {\n                stockId: responseData.stockId,\n                options: responseData.options,\n                series: responseData.series\n                },\n                responseData.yahooSummaryData,\n                responseData.imageInfo,\n                responseData.stockId,\n                abbreviateNumber(responseData.marketCap)\n                )\n              ]])\n          }\n          setDisablingAdd(false);\n        }\n        else {\n          console.log(\"Already entered the stock\")\n        }\n        setCurrentTicker('');\n      }\n    return (\n      <div>\n\n        <div className=\"header\">\n            {/* <Container maxWidth=\"sm\" > */}\n            {/* \"headerbackDrop\" */}\n              <div className=\"\" style={{ textAlign: \"center\"}}>\n              <h1 >Welcome to your Portfolio</h1>\n                  {/* input */}\n                </div>\n            {/* </Container> */}\n            <Container maxWidth=\"sm\" className=\"text-center\">\n              <form onSubmit={onSubmitForm} noValidate autoComplete=\"off\">\n                <div className=\"searchTool\">\n                  {!symbolError ? (\n                    <TextField id=\"standard-basic\"\n                      label=\"Please Enter your Stock Ticker (AAPL, BA, GE, AMZN)\"\n                      text=\"text\" className=\"form-control\"\n                      value={currentTicker} \n                      onChange={e => setCurrentTicker(e.target.value)}/>\n                    ) : (\n                      <TextField\n                      error\n                      className=\"form-control\"\n                      id=\"standard-error-helper-text\"\n                      label=\"Ticker not supported\"\n                      value={currentTicker} \n                      onChange={e => setCurrentTicker(e.target.value)}\n                    />\n                    ) \n                  }\n                    <ButtonGroup\n                        color=\"primary\"\n                        aria-label=\"contained primary button group\"\n                        variant=\"contained\"\n                    >\n                    <Button color=\"primary\"  disabled={disablingAdd} style={{backgroundColor: \"rgb(27,66,76)\", padding: \"12px\"}} type=\"submit\">Add</Button>\n                    </ButtonGroup>\n                </div>\n              </form>\n            </Container>\n        </div>\n        {/* <div className=\"spacerBarFlexEnd\">\n          {marketStatus ? <div style={{lineHeight: \"1.6\"}}><h4 style={{color: 'green', marginTop: \"-10px\", marginBottom: \"-20px\", lineHeight: \"1.6\"}}>Market Open</h4></div> : <div style={{color: 'red', marginRight: \"20px\", marginBottom: \"-20px\"}}><h4 style={{lineHeight: \"1.6\"}}>Market Closed</h4></div>}\n        </div> */}\n      </div>\n    )\n}\n\nexport default HeaderSearch\n","// import React, {Fragment, useState,Component, useEffect, useContext} from 'react'\n// import {CurrentStockContext} from '../context/currentStockContext';\n// import { useHistory } from 'react-router-dom';\n// import Button from '@material-ui/core/Button';\n\n// const ViewMoreInfo = (props) => {\n//     const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n//     let history = useHistory()\n    \n//     const viewStock = async (id, name, row) => {\n//     let stringRow = JSON.stringify(row)\n//     localStorage.setItem(\"currentStockInfo\", stringRow);\n//     setCurrentStockInfo(JSON.parse(localStorage.getItem('currentStockInfo')))\n//     history.push({\n//         pathname: `/view/${id}/${name}`,\n//         financialData: props.financialData,\n//         abbreviatedMarketCap: props.abbreviatedMarketCap\n//     })\n//     }\n//     return (\n//     <div>\n//         <Button size=\"medium\" onClick={()=> viewStock(props.id, props.name, props.row)}> More Info</Button>\n//     </div>\n//     )\n// }\n\n// export default ViewMoreInfo\n\n\nimport React, {Fragment, useState,Component, useEffect, useContext} from 'react'\nimport Chart from 'react-apexcharts'\nimport {CurrentStockContext} from '../../../context/currentStockContext';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport SparkLineGraph from './sparkLineGraph'\nconst Charting = (props) => {\n    const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n    let history = useHistory()\n    \n    const viewStock = async (id, name, row) => {\n    let stringRow = JSON.stringify(row)\n    localStorage.setItem(\"currentStockInfo\", stringRow);\n    setCurrentStockInfo(JSON.parse(localStorage.getItem('currentStockInfo')))\n    history.push({\n        pathname: `/view/${id}/${name}`,\n        financialData: props.financialData,\n        abbreviatedMarketCap: props.abbreviatedMarketCap\n    })\n    }\n    \nreturn (\n\n    <div style={{display: \"flex\", alignItems: \"center\", padding: \"0\", margin: \"10\"}}>\n          {/* <SparkLineGraph/> */}\n          {/* make eye */}\n        {/* <Chart options={props.data.options} series={props.data.series} type=\"candlestick\" height={100} width={300} /> */}\n        <Button size=\"medium\" onClick={()=> viewStock(props.id, props.name, props.row)}> More Info</Button>\n    </div>\n    )\n}\n\n\n\nexport default Charting;","import React, {useEffect, useState} from 'react'\nimport backendURL from './../../backendLink/getBackendURL'\nimport './../../styles/style.css'\n\nconst MarketStatus = () => {\n    const [marketStatus, setMarketStatus] = useState(false);\n\n    useEffect(() => {\n        const getStatus = async () => {\n          const marketStatusReponse = await backendURL.get('/checkMarketStatus');\n          const marketStatusDesicion = marketStatusReponse.data \n          if(marketStatusDesicion) {\n              setMarketStatus(true)\n            } else {\n              setMarketStatus(false)\n            }\n        }\n        getStatus();\n      }, [])\n\n    return (\n        <div>\n            <div className=\"spacerBarFlexEnd\" style={{marginBottom: \"40px\"}}>\n                {marketStatus ? <div style={{color: 'red', marginRight: \"20px\", marginBottom: \"-20px\"}}><h4 style={{lineHeight: \"1.6\"}}>Market Closed</h4></div> : <div style={{color: 'green', marginTop: \"-20px\", marginBottom: \"-20px\"}}><h4 style={{lineHeight: \"1.6\"}}>Market Open</h4></div> }\n            </div>\n        </div>\n    )\n}\n\nexport default MarketStatus\n","import React, {useContext, useState, useEffect} from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {TableContext} from './../../../context/tableContext';\nimport EnhancedTableHead from './tableHead'\nimport EnhancedTableToolbar from './tableToolBar'\nimport Container from '@material-ui/core/Container';\nimport URLlink from '../../../backendLink/getBackendURL'\nimport {rearrangeData} from './../../../sortDataFunctions/sortChartData';\nimport ViewInfo from '../tableComponents/rowChart';\nimport StockArrow from '../../stockArrow';\nimport './../../../styles/tableStyle.css'\nimport './../../../styles/style.css'\nimport ReactHover from 'react-hover'\nimport HoverSymbol from '../tableComponents/hoverSymbol';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grow from '@material-ui/core/Grow';\nimport SearchHeader from '../headerSearch';\nimport { v4 as uuidv4 } from 'uuid';\nimport Button from '@material-ui/core/Button'\nimport ViewMoreInfo from '../tableComponents/viewMoreInfo';\nimport MarketStatus from '../marketStatusBar'\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      backgroundAttachment: \"fixed\",\n      backgroundPosition: \"center\",\n      backgroundImage: \"radial-gradient(circle, #211f1f, #292626, #302d2f, #373437, #3d3c40, #414249, #444953, #45505c, #415869, #3a6074, #2d697e, #147287)\",\n      paddingBottom: \"100px\",\n      zIndex: -99999\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n      border: \"2px solid #0C6BA7\",\n    },\n    LinearProgress: {\n      width: \"100%\"\n    },\n    tableChart: {\n      display:\"flex\",\n      flexDirection:\"column\",\n\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }));\n  \nconst EnhancedTable = () => {\n  // table section styling\n  const classes = useStyles();\n\n  // table states\n  const {rows, setRows} = useContext(TableContext)\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('stockChange');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [chartWidth, setChartWidth] =  React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [loading, setLoading] = React.useState(false)\n     \n\n  function abbreviateNumber(value) {\n    let newValue = value;\n    if (value >= 1000) {\n        let suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n        let suffixNum = Math.floor( (\"\"+value).length/3 );\n        let shortValue = '';\n        for (let precision = 2; precision >= 1; precision--) {\n            shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\n            let dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\n            if (dotLessShortValue.length <= 2) { break; }\n        }\n        if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\n        newValue = shortValue+suffixes[suffixNum];\n    }\n    return newValue;\n  }\n\n  // the function that grabs the rows\n  function createData(symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap) {\n    return { symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap};\n  }\n\n  //populate each row with stock data\n  useEffect( () => {\n  let rowStorage = JSON.parse(localStorage.getItem('StockRows'))\n  const fetchData = async () => {\n      try{\n          // initiate the date for to and from for finnhub api call\n          const now = new Date().getTime()\n          const current = parseInt(now/1000)\n          const month = current - (86400 * 31)\n\n          const stockSymbols = rowStorage.map(item => item.symbol)\n          const totalStockInfoResponse = await URLlink.get('/getStockInfo', {\n              params:{ list: stockSymbols, from: month, to: current}\n          })\n\n          //modify data for stock charts\n          const totalModifiedStockData = totalStockInfoResponse.data[0]\n              .map(element => rearrangeData(element))\n          let formattedRows = totalModifiedStockData.map(row => {\n            return createData(row.symbol, row.priceChange, row.marketCap, row.currentPrice, {stockId: row.stockId, options: row.options, series: row.series}, row.yahooSummaryData, row.imageInfo, row.stockId, abbreviateNumber(row.marketCap))\n          })\n          setLoading(true)\n          setRows(formattedRows);\n      } catch(err) {\n          console.log(\"thi is an error, \", err);\n      }\n  };\n    if(rowStorage && (rowStorage.length !== 0) ) {\n      fetchData()\n    } else {\n      setLoading(true)\n    }\n  }, []);\n\n\n\n\n  // function that descends the rows\n  function descendingComparator(a, b, orderBy) {\n      if (b[orderBy] < a[orderBy]) {\n          return -1;\n      }\n      if (b[orderBy] > a[orderBy]) {\n          return 1;\n      }\n      return 0;\n  }\n\n    \n  //function that compares to descend\n  function getComparator(order, orderBy) {\n    return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  //compare and sort incoming array\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  //detect if ascending or descenting and selects sort method\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  \n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.symbol);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n  \n  const handleClick = (event, symbol) => {\n    const selectedIndex = selected.indexOf(symbol);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, symbol);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n  \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const handleChangeWidth = (event) => {\n    setChartWidth(event.target.checked);\n  };\n\n  const isSelected = (symbol) => selected.indexOf(symbol) !== -1;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    \n  const optionsCursorTrueWithMargin = {\n    followCursor: true,\n    shiftX: 10,\n    shiftY: -100,\n  }\n\n  return (  \n    <div className={classes.root} style={{zIndex: -99999}}>\n      <MarketStatus/>\n      <Container maxWidth={chartWidth ? false : 'lg'}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar\n            rows={rows}\n            setSelected={setSelected}\n            selected={selected}\n            numSelected={selected.length}\n          />\n          {loading ? (false) : (\n            <div className=\"loadingTable\">\n              <LinearProgress className={classes.LinearProgress} />\n            </div>)}\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? 'small' : 'medium'}\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      const isItemSelected = isSelected(row.symbol);\n                      const labelId = `enhanced-table-checkbox-${index}`;\n                      return (\n                        // animations for populating rows\n                        <Grow\n                          in={true}\n                          style={{ transformOrigin: '0 0 0' }}\n                          {...(rows ? { timeout: 1000 } : [])}\n                        > \n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row.symbol)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={uuidv4()}\n                            selected={isItemSelected}\n                          >\n                            <TableCell  key={uuidv4()} padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{ 'aria-labelledby': labelId }}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\" key={uuidv4()} component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                <div className={classes.tableChart}>\n                                  <ReactHover\n                                      options={optionsCursorTrueWithMargin}>\n                                      <ReactHover.Trigger type='trigger'>\n                                        <div><h3>{row.symbol.toUpperCase()}</h3></div>\n                                      </ReactHover.Trigger>\n                                      \n                                      <ReactHover.Hover type='hover'>\n                                      \n                                        <HoverSymbol image={row.imageInfo}/>\n                                      </ReactHover.Hover>\n                                  </ReactHover>\n                                </div>\n                            </TableCell>\n                            <TableCell  key={uuidv4()} align=\"right\"><StockArrow break={true} dollarChange={row.financialData.regularMarketChange} percentageChange={row.financialData.regularMarketChangePercent}/></TableCell>\n                            <TableCell  key={uuidv4()} align=\"right\">{abbreviateNumber(row.marketCap)}</TableCell>\n                            <TableCell  key={uuidv4()} align=\"right\">{row.sharePrice}</TableCell>\n                            <TableCell  key={uuidv4()} className=\"expand-trigger\" align=\"right\">\n                              <ViewInfo\n                                key={uuidv4()}\n                                row={row} \n                                data={row.chart}\n                                id={row.chart.stockId}\n                                name={row.symbol}\n                                abbreviatedMarketCap = {abbreviateNumber(row.marketCap)}\n                                financialData={row.financialData}\n                              >\n                            </ViewInfo>\n                            </TableCell>\n                            <TableCell key={uuidv4()} className=\"expand-trigger\" align=\"right\">\n                              <ViewMoreInfo \n                                key={uuidv4()}\n                                row={row} \n                                data={row.chart}\n                                id={row.chart.stockId}\n                                name={row.symbol}\n                                abbreviatedMarketCap = {abbreviateNumber(row.marketCap)}\n                                financialData={row.financialData}\n                              />\n                            </TableCell>\n                          </TableRow>\n                        </Grow>\n                      );\n                    })\n                }\n                {emptyRows > 0 && (\n                  <TableRow key={uuidv4()} style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={7} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <div>\n            <TablePagination\n              key={uuidv4()}\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </div>\n        </Paper>\n      </Container>\n      <Container className=\"tableFormControl\">\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Decrease Chart Spacing\"\n        />\n        <FormControlLabel\n          control={<Switch checked={chartWidth} onChange={handleChangeWidth} />}\n          label=\"Increase Chart Width\"\n        />\n      </Container>\n    </div>\n  );\n}\n  \nexport default EnhancedTable;","import React, {useState, useEffect, useContext} from 'react'\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider';\nimport {CryptoContext} from '../../../context/cryptoContext'\nimport AddIcon from '@material-ui/icons/Add';\nimport './../../../styles/style.css'\nimport Fab from '@material-ui/core/Fab';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n  }));\n  \n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  function getStyles(name, cryptoName, theme) {\n    return {\n      fontWeight:\n        cryptoName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  \n\nconst names = [\n    'ADA',\n    'BAND',\n    'BTC',\n    'BCH',\n    'DASH',\n    'EOS',\n    'ETC',\n    'ETH',\n    'LINK',\n    'LTC',\n    'NEO',\n    'ONT',\n    'TRX',\n    'USDT',\n    'XMR',\n    'XRP',\n    'XTZ'\n];\n  \nconst ModalOptions = () => {   \n    const [buttonColor, setButtonColor] = useState('primary');\n    const [switcher, setSwitcher] = React.useState(false);\n    const [add, setAdd] = useState(false);\n    const [deleting, setDelete] = useState(false);\n    const [textDelete, setTextDelete] = useState(\"Delete\")\n    const [adding, setAdding] = useState(false);\n    const {currentCrypto, setCryto} = useContext(CryptoContext)\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [cryptoName, setCryptoName] = React.useState([]);\n\n    const handleChange = (event) => {\n        setCryptoName(event.target.value);\n    };\n\n    const handleChangeMultiple = (event) => {\n        const { options } = event.target;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n            value.push(options[i].value);\n        }\n        }\n        setCryptoName(value);\n    };\n\n    const changeDelete = () => {\n        if(textDelete === \"Delete\") {\n            setTextDelete(\"Deactivate\")\n            setDelete(true)\n        } else {\n            setTextDelete(\"Delete\")\n            setDelete(false)\n        }\n    }\n\n    const display = () => {\n        if(deleting) {\n            return 'x'\n        }\n        else \n        {\n        return ''\n    }\n    }\n    \n    const deleteItem = (name) => {\n        if(deleting) {\n            setCryto(currentCrypto.filter(crypto => crypto !== name))\n        }\n    }\n    const addCrypto = (name) => {\n        if(!currentCrypto.includes(cryptoName) \n            && !(cryptoName == '') \n            && currentCrypto.length <= 5) {\n                setDelete(false)\n                setAdd(true)\n                console.log(currentCrypto)\n                setTextDelete(\"Delete\")\n                setCryto(prevState => [...prevState, cryptoName])\n        } \n    }\n\n    return (\n        <div>\n            <div style={{display: \"flex\"}}>\n                {currentCrypto.map((cryp) => <div key={uuidv4()}> <Button key={uuidv4()} value={cryp} onClick={() =>deleteItem(cryp)} style={{borderRadius: \"40px\", marginLeft: \"10px\"}} variant=\"contained\" color={deleting ? ('secondary') : ('primary')}> {`${cryp} ` + display()} </Button> </div>)}\n            </div>\n            <Divider style={{marginTop: '20px'}}/>\n            <div style={{margin: '20px', display: \"flex\"}}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\n                    <Select\n                        labelId=\"demo-mutiple-name-label\"\n                        id=\"demo-mutiple-name\"\n                        value={cryptoName}\n                        onChange={handleChange}\n                        input={<Input />}\n                        MenuProps={MenuProps}\n                    >\n                    {names.map((name) => (\n                        <MenuItem key={name} value={name} style={getStyles(name, cryptoName, theme)}>\n                        {name}\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n                <Button onClick={addCrypto} style={{background: \"rgb(94,203,93)\", marginLeft: '20px', borderRadius: \"50px\"}} variant=\"contained\" color=\"primary\">ADD</Button> \n                <Button onClick={changeDelete} style={{marginLeft: '20px', borderRadius: \"50px\"}} variant=\"contained\" color=\"Secondary\">{textDelete}</Button>\n            </div>\n            \n        </div>\n    )\n    \n}\n\nexport default ModalOptions","import React, {useContext, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport CryptoModuleOptions from './cryptoModalOptions'\nimport {CryptoContext} from '../../../context/cryptoContext';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst TransitionsModal = () => {\n  const classes = useStyles();\n  const [openModal, setOpen] = React.useState(false);\n  const {currentCrypto, setCryto} = useContext(CryptoContext)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Button style={{color: \"white\"}} variant=\"outlined\" onClick={handleOpen}>\n        Edit CryptoBar\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={openModal}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={openModal}>\n          <div className={classes.paper}>\n            <Card style={{padding: \"30px\"}}>\n              <h2 id=\"transition-modal-title\">Change your Cryptocurrencies (Limit 6)</h2>\n              <CryptoModuleOptions/>\n            </Card>\n          </div>\n          \n        </Fade>\n      </Modal>\n    </div>\n );\n}\n\nexport default TransitionsModal;","import React, {useState, useEffect, useContext} from 'react'\nimport Ticker from 'react-ticker'\n// import URLlink from '../backendLink/getBackendURL'\nimport URLlink from '../../../backendLink/getBackendURL'\nimport CryptoCompare from 'react-crypto-compare';\nimport {CryptoContext} from './../../../context/cryptoContext';\nimport CryptoOptions from './cryptoModal';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'\nimport './../../../styles/cryptoStyle.css'\nimport { wrap } from 'highcharts';\nimport StockArrow from '../../stockArrow';\n\n// const GetRatesFromAPI = (props) => {\n   \n   \n//     // A placeholder is needed, to tell react-ticker, that width and height might have changed\n//     // It uses MutationObserver internally\n//     return props.rates ? (\n//       <p style={{ whiteSpace: \"nowrap\" }}>{props.rates} +++ </p>\n//     ) : (\n//       <p style={{ visibility: \"hidden\" }}>Placeholder</p>\n//     );\n//   };\n\n  function StockTicker() {\n    // const [rates, setRates] = useState(\"\");\n    const {currentCrypto, setCryto, cryptoStorage, setCryptoStorage } = useContext(CryptoContext)\n    const [cryptoInfo, setCryptoInfo] = useState([{}])\n\n    // useEffect(() => {\n        // async function fetchData() {\n        //   const response = await URLlink.get('/getCrypto');\n        //   localStorage.setItem('currentCryptoInfo', JSON.stringify(response.data))\n        //   // currentCrypto()\n        //   let hello = localStorage.getItem('currentCryptoInfo')\n        //   let j = JSON.parse(hello)\n        //   // setCryptoInfo(j)\n        //   let list = []\n        //   currentCrypto.forEach(element => (\n        //      list.push(j[element].USD)\n        //   ));\n        //   setCryptoInfo(list)\n        //   list.forEach(crypto => console.log((crypto)))\n        // }\n\n        // fetchData();\n      // }, []);\n\n    return (\n      <div>\n        <div className=\"flexBoxContainer\" style={{flexWrap: \"no-wrap\", background: \"rgb(34,34,34)\"}}>            \n            <div style={{background: \"rgb(34,34,34)\", color: \"white\", display: \"flex\"}}>\n              {cryptoStorage.map(crypto => \n                <div className=\"flexbox-item2 flexbox-item\">\n                  <div className=\"tickerBox\" style={{textAlign: \"center\"}}>\n                    <div>{(`${crypto.FROMSYMBOL} Price: ${crypto.PRICE}`)}</div>\n                    {/* <div>{fixingToFloat(crypto.CHANGEPCTDAY)}</div> */}\n                    <StockArrow break={false} percentageChange={Number(crypto.CHANGEPCTDAY)} dollarChange={Number(crypto.CHANGEDAY)}/>\n                  </div>\n                </div>)}\n                <div style={{display: \"flex\", justifyContent: \"flex-end\", color: \"white\"}}> \n                  <CryptoOptions/>\n                </div>\n            </div>\n        </div>\n        <div className=\"spaceBar\">\n          \n        </div>\n        {/* <div className=\"searchBar\">\n        <h1 style={{color: \"white\"}}>Welcome to your Stock Portfolio</h1>\n          \n        </div> */}\n      </div>\n        \n    //   <Ticker offset=\"run-in\" speed={3}>\n    //     {/* {() => <GetRatesFromAPI rates={rates} />} */}\n    //   </Ticker>\n    );\n  }\n   \n  export default StockTicker;","import React from 'react'\nimport StockTable from './mainTableParts/stockTable'\nimport CryptoCompare from \"react-crypto-compare\";\nimport CryptoTicker from './crytobar/crytpoTicker'\nimport SearchHeader from './headerSearch';\nimport './../../styles/style.css'\n\n// const ws = require('ws');\n// var cryptocompareWS = new ws('wss://streaming.cryptocompare.com')\n\nconst HomePage = () => {\n    return (\n        <div>\n            <CryptoTicker/>\n            <SearchHeader/>\n            <StockTable/>\n        </div>\n    )\n}\n\nexport default HomePage;\n","import React, {useRef} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport indicators from \"highcharts/indicators/indicators-all.js\";\nimport dragPanes from \"highcharts/modules/drag-panes.js\";\nimport annotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\nimport priceIndicator from \"highcharts/modules/price-indicator.js\";\nimport fullScreen from \"highcharts/modules/full-screen.js\";\nimport stockTools from \"highcharts/modules/stock-tools.js\";\nimport downloadFile from  \"highcharts/modules/exporting\"\nimport Highchartsd from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport { red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box'\n\n\n\n// init the module\nindicators(Highchartsd);\ndragPanes(Highchartsd);\nannotationsAdvanced(Highchartsd);\npriceIndicator(Highchartsd);\nfullScreen(Highchartsd);\nstockTools(Highchartsd);\n\n// DownloadFile(Highchartsd);\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#0C6BA7\"\n  },\n  button: {\n    color: \"#C3EBF6\",\n    background: \"rgb(64,80,181)\"\n  }\n}));  \n\nconst InteractiveChart = (props) => {\n    const chart = useRef(null);\n    const history = useHistory()\n    const classes = useStyles();\n    \n  var data = props.location.state.stockData;\n  \n  var ohlc = [],\n    volume = [],\n    dataLength = data.length,\n    groupingUnits = [\n      [\n        \"week\", // unit name\n        [1] // allowed multiples\n      ],\n      [\"month\", [1, 2, 3, 4, 6]]\n    ],\n    i = 0;\n  \n  for (i; i < dataLength; i += 1) {\n    ohlc.push([\n      data[i][0], // the date\n      data[i][1], // open\n      data[i][2], // high\n      data[i][3], // low\n      data[i][4] // close\n    ]);\n  \n    volume.push([\n      data[i][0], // the date\n      data[i][5] // the volume\n    ]);\n  }\n  \n  // Highcharts.stockChart('container',\nconst options = {\n    navigation: {\n      bindingsClassName: 'chart-1'\n    },\n    yAxis: [{\n      labels: {\n        align: 'left'\n      },\n      height: '80%',\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n        var chart = this.chart,\n          position;\n  \n        if (point.isHeader) {\n          position = {\n            x: Math.max(\n              // Left side limit\n              chart.plotLeft,\n              Math.min(\n                point.plotX + chart.plotLeft - width / 2,\n                // Right side limit\n                chart.chartWidth - width - chart.marginRight\n              )\n            ),\n            y: point.plotY\n          };\n        } else {\n          position = {\n            x: point.series.chart.plotLeft,\n            y: point.series.yAxis.top - chart.plotTop\n          };\n        }\n  \n        return position;\n      }\n    },\n    chart: {height: 800},\n    series: [{\n      type: 'ohlc',\n      id: 'aapl-ohlc',\n      name: 'AAPL Stock Price',\n      data: ohlc\n    }, {\n      type: 'column',\n      id: 'aapl-volume',\n      name: 'AAPL Volume',\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 800\n        },\n        chartOptions: {\n          rangeSelector: {\n            inputEnabled: false\n          }\n        }\n      }]\n    }\n  };\n\n  const onHandleBack = () => {\n    console.log(\"hello\")\n    history.goBack();\n  }\n  \n  return (\n      <div className={classes.root}>\n        <Box display=\"flex\" p={1} color=\"#0C6BA7\">\n              <Box p={1} flexGrow={1}  bgcolor=\"#0C6BA7\">\n                <Button onClick={onHandleBack} className={classes.button} variant=\"contained\" size=\"large\" color=\"black\">\n                  <i className=\"fa-lg fas fa-angle-double-left\"></i>\n                </Button>\n              </Box>\n              <Box p={.5}  display=\"flex\" justifyContent=\"center\"  bgcolor=\"grey.300\">\n                <p style={{marginBottom: \"0\"}}>Note: For best interactivity, please full screen the Chart</p>\n              </Box>\n        </Box>\n          <HighchartsReact options={options} constructorType={'stockChart'} highcharts={Highchartsd} />\n      </div>\n  )\n}\n\nexport default InteractiveChart;\n","import React from 'react';\nimport './App.css';\nimport ViewStock from './components/viewStockPage/viewStock'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'; \nimport {TableContextProvider} from './context/tableContext';\nimport {CurrentStockContextProvider} from './context/currentStockContext';\nimport {CryptoContextProvider} from './context/cryptoContext';\nimport HomePage from './components/homePage/homePage';\nimport InteractiveBigChart from './components/interactivePage/interactiveChart';\n\nfunction App() {\n  return (\n    <div className=\"\">\n    <TableContextProvider>\n      <CurrentStockContextProvider>\n        <CryptoContextProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage}></Route>\n              <Route exact path=\"/view/:id/:name/\" component={ViewStock}></Route>\n              <Route exact path=\"/view/interactive/:id/:name/\" component={InteractiveBigChart}></Route>\n            </Switch>\n          </Router>\n        </CryptoContextProvider>\n      </CurrentStockContextProvider>\n    </TableContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Router, Switch, Route} from 'react-router-dom'; \n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // {/* </React.StrictMode>, */}\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}