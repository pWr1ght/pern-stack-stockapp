{"version":3,"sources":["components/bigStockChart.js","backendLink/getBackendURL.js","components/stockArrow.js","components/stockCard.js","components/stackChart.js","components/stockNewsListItem.js","context/currentStockContext.js","components/viewStock.js","context/tableContext.js","components/tableHead.js","components/tableToolBar.js","sortDataFunctions/sortChartData.js","components/rowChart.js","components/hoverSymbol.js","components/headerSearch.js","components/stockTable.js","components/homePage.js","components/interactiveChart.js","App.js","serviceWorker.js","index.js"],"names":["SingleVeiw","props","history","useHistory","data","bigChartData","ohlc","volume","dataLength","length","i","push","options","navigation","bindingsClassName","yAxis","labels","align","height","resize","enabled","top","offset","stockTools","gui","tooltip","shape","headerShape","borderWidth","shadow","positioner","width","point","chart","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","series","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","Card","style","maxwidth","Box","display","p","bgcolor","flexGrow","generalData","longName","color","fontSize","exchangeTimezoneName","Button","onClick","pathname","state","stockData","variant","highcharts","Highcharts","constructorType","axios","create","baseURL","StockArrow","useState","colorChange","setColorChange","positive","setPositive","directionUp","setDirectionUp","useEffect","console","log","dollarChange","textAlign","toFixed","break","percentageChange","className","useStyles","makeStyles","root","minWidth","minHeight","bullet","margin","transform","title","pos","marginBottom","changePrices","StockCard","classes","CardContent","Typography","lineHeight","cardData","regularMarketPrice","financialCurrency","justifyContent","regularMarketChange","regularMarketChangePercent","Divider","regularMarketDayRange","fiftyTwoWeekRange","regularMarketOpen","regularMarketPreviousClose","epsTrailingTwelveMonths","isNaN","trailingPE","abbreviatedMarketCap","time","date","Date","year","getFullYear","month","getMonth","day","getDate","getTime","earningsTimestampStart","StackChart","seriesData","setSeries","dates","setDates","a","GetStocks","get","params","stockName","symbol","getReccomendationResponse","recentRec","buy","hold","sell","strongBuy","strongSell","period","getRecommendations","dataLabels","text","fontWeight","breakpoint","legend","show","position","offsetY","parse","require","StockNewsList","ListItem","direction","href","link","ListItemText","secondary","slice","CurrentStockContext","createContext","CurrentStockContextProvider","JSON","localStorage","getItem","currentStockInfo","setCurrentStockInfo","Provider","value","children","theme","background","paper","padding","spacing","palette","button","ViewStock","useContext","setBigChartData","articles","setArticles","useParams","fetchChartData","response","fetchNews","getNewsResponse","getTopTenNewsArticles","financialData","displayName","goBack","size","Container","Grid","container","item","lg","Paper","abMarketCap","maxHeight","overflow","List","map","pubDate","TableContext","TableContextProvider","rows","setRows","setItem","stringify","headCells","disablePadding","label","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","setSelected","selected","deleteRow","stayRowArray","filter","row","includes","stockId","Toolbar","component","Tooltip","IconButton","aria-label","rearangeData","tickerData","open","o","high","h","low","l","close","c","timeStamp","t","candleStruct","imageInfo","yahooSummaryData","dataSummary","priceChangePercent","priceChange","marketCap","currentPrice","v","toolbar","xaxis","yaxis","forceNiceScale","decimalsInFloat","onDatasetHover","highlightDataSeries","Charting","viewStock","stringRow","alignItems","HoverSymbol","CardActionArea","CardMedia","alt","image","logo","gutterBottom","domain","HeaderSearch","currentTicker","setCurrentTicker","symbolError","setSymbolError","abbreviateNumber","newValue","suffixNum","floor","shortValue","precision","parseFloat","pow","toPrecision","replace","onSubmitForm","preventDefault","submit","trim","now","current","parseInt","backendURL","post","user_id","ticker","from","to","addingResponse","responseData","prevRows","stockChange","sharePrice","onSubmit","noValidate","autoComplete","TextField","error","e","target","ButtonGroup","table","border","clip","EnhancedTable","React","setOrder","setOrderBy","page","setPage","dense","setDense","setChartWidth","rowsPerPage","setRowsPerPage","loading","setLoading","descendingComparator","b","rowStorage","fetchData","stockSymbols","list","totalStockInfoResponse","totalModifiedStockData","element","formattedRows","emptyRows","optionsCursorTrueWithMargin","followCursor","shiftX","shiftY","LinearProgress","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","isItemSelected","indexOf","labelId","Grow","in","transformOrigin","timeout","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","Trigger","Hover","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","HomePage","indicators","Highchartsd","dragPanes","annotationsAdvanced","priceIndicator","fullScreen","InteractiveChart","useRef","location","App","exact","path","InteractiveBigChart","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0561342e.chunk.js","sourcesContent":["import React from 'react'\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card'\nimport {useParams, useHistory} from 'react-router-dom'\n\nconst SingleVeiw = (props) => {\nconst history = useHistory()\nvar data = props.bigChartData\n  \n  var ohlc = [],\n    volume = [],\n    dataLength = data.length,\n    groupingUnits = [\n      [\n        \"week\", // unit name\n        [1] // allowed multiples\n      ],\n      [\"month\", [1, 2, 3, 4, 6]]\n    ],\n    i = 0;\n  \n  for (i; i < dataLength; i += 1) {\n    ohlc.push([\n      data[i][0], // the date\n      data[i][1], // open\n      data[i][2], // high\n      data[i][3], // low\n      data[i][4] // close\n    ]);\n  \n    volume.push([\n      data[i][0], // the date\n      data[i][5] // the volume\n    ]);\n  }\n\n  // Highcharts.stockChart('container',\n  const options ={\n    navigation: {\n      bindingsClassName: 'chart-12'\n    },\n    yAxis: [{\n      labels: {\n        align: 'left'\n      },\n      height: '80%',\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    stockTools: {\n      gui: {\n          enabled: false // disable the built-in toolbar\n      }\n    },\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n        var chart = this.chart,\n          position;\n  \n        if (point.isHeader) {\n          position = {\n            x: Math.max(\n              // Left side limit\n              chart.plotLeft,\n              Math.min(\n                point.plotX + chart.plotLeft - width / 2,\n                // Right side limit\n                chart.chartWidth - width - chart.marginRight\n              )\n            ),\n            y: point.plotY\n          };\n        } else {\n          position = {\n            x: point.series.chart.plotLeft,\n            y: point.series.yAxis.top - chart.plotTop\n          };\n        }\n  \n        return position;\n      }\n    },\n    series: [{\n      type: 'ohlc',\n      id: `${props.name}-ohlc`,\n      name: `${props.name} Stock Price`,\n      data: ohlc\n    }, {\n      type: 'column',\n      id: `${props.name}-volume`,\n      name: `${props.name} Volume`,\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 1500\n        },\n        chartOptions: {\n          rangeSelector: {\n            inputEnabled: false\n          }\n        }\n      }]\n    }\n  };\n\n  const interactWithChart = () => {\n    history.push({\n        pathname: `/view/interactive/${props.id}/${props.name}`,\n        state: {stockData: props.bigChartData}\n      })\n  }\n  \n    return (\n      <Card>\n        <div style={{maxwidth:\"1500px\", height:\"auto\"}}>\n          <div style={{ width: '100%' }}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n              <Box p={2} flexGrow={1}  bgcolor=\"grey.300\">\n                {props.generalData.longName} ({props.name}) <span style={{color: \"rgba(0, 0, 0, 0.54)\", fontSize: \"14px\"}}>{props.generalData.exchangeTimezoneName} </span>\n              </Box>\n              <Box p={1} bgcolor=\"grey.300\">\n                <Button onClick={interactWithChart} variant=\"outlined\" color=\"primary\">Switch to Analysis Mode</Button>\n              </Box>\n            </Box>\n          </div>\n            <HighchartsReact\n                highcharts={Highcharts}\n                constructorType={'stockChart'}\n                options={options}\n                />\n        </div>\n      </Card>\n    )\n}\n\nexport default SingleVeiw","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"http://localhost:5000/\"\n});","import React, {useState, useEffect} from 'react'\n\nconst StockArrow = (props) => {\n    const [ colorChange, setColorChange] = useState('green')\n    const [ positive, setPositive] = useState('+')\n    const [ directionUp, setDirectionUp] = useState(true);\n\n    useEffect(() => {\n        console.log(\"this is dollarChange\", props.dollarChange)\n        if(props.dollarChange > 0) {\n            setColorChange('green');\n            setPositive('+');\n            setDirectionUp(true)\n        } else {\n            setColorChange('red');\n            setPositive('');\n            setDirectionUp(false)\n        }\n    }, [])\n    \n    return (\n        <div style={{color: colorChange, textAlign: \"center\"}}>\n            <span>\n                {positive + props.dollarChange.toFixed(2)}\n                {props.break ? (<br></br>) : (false)}\n                {'(' + props.percentageChange.toFixed(2) + '%' + ') '} \n                {directionUp ? <i className=\"fas fa-caret-up\"></i> : <i className=\"fas fa-caret-down\"></i>}\n            </span>\n        </div>\n    )\n}\n\nexport default StockArrow;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../styles/cardStyle.css'\nimport Divider from '@material-ui/core/Divider';\nimport StockPriceDisplay from './stockArrow'\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      minHeight: 478,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    changePrices: {\n      color: 'green'\n    },\n  });\n\n\nconst StockCard = (props) => {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const getTime = (time) => {\n      let date = new Date(time * 1000);\n      var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n      var year = date.getFullYear();\n      var month = months[date.getMonth()];\n      var day = date.getDate();\n      let fullDate = `${month} ${day}, ${year}`\n      return fullDate;\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                    <Typography style={{textAlign: \"center\"}} variant=\"h3\">\n                      {props.name}\n                    </Typography>\n                    <Typography style={{lineHeight: \"1\"}} variant=\"h3\">\n                        {props.cardData.regularMarketPrice.toFixed(2)} <span style={{color: \"rgba(0, 0, 0, 0.54)\", fontSize: \"16px\"}}>({props.cardData.financialCurrency})</span>\n                    </Typography>\n                    <div>\n                    <div style={{lineHeight: \"1\", display: \"flex\", justifyContent: \"start\"}} >\n                      <StockPriceDisplay break={false} dollarChange={props.cardData.regularMarketChange} percentageChange={props.cardData.regularMarketChangePercent}/>\n                    </div>\n                </div>\n                <br/>\n                <h4>Summary</h4>\n                <Divider/>\n                <div className=\"cardContainer\">\n                    <div className=\"item\">Days Range:\n                    <div>{props.cardData.regularMarketDayRange}</div></div>\n                    <div className=\"item\">52 Week Range:\n                    <div >{props.cardData.fiftyTwoWeekRange}</div></div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div className=\"item\">Open: {props.cardData.regularMarketOpen}</div>\n                    <div className=\"item\">Previous Close: {props.cardData.regularMarketPreviousClose} </div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div  className=\"item\">Trailing 12 mo. EPS: {props.cardData.epsTrailingTwelveMonths.toFixed(2)}</div>\n                    <div  className=\"item\">Trailing PE: {!isNaN(props.cardData.trailingPE) ? (props.cardData.trailingPE.toFixed(2)) : (props.cardData.trailingPE)}</div>\n                    <div><Divider/></div>\n                    <div><Divider/></div>\n                    <div className=\"item\">MarketCap: {props.abbreviatedMarketCap} </div>\n                    <div className=\"item\">Earnings Date: {getTime(props.cardData.earningsTimestampStart)} </div>\n                </div>\n            </CardContent>\n        </Card>\n  );\n}\n\nexport default StockCard\n","import ReactApexChart from 'react-apexcharts'\nimport React, { useState,useEffect } from 'react'\nimport GetStocks from '../backendLink/getBackendURL'\n\nconst StackChart = (props) => {\n    const [seriesData, setSeries] = useState([0])\n    const [dates, setDates] = useState([])\n\n    useEffect(() => {\n        const getRecommendations = async () => {\n            let getReccomendationResponse = await GetStocks.get('/singlestock/reccomendation', {\n              params: {\n                stockName: props.symbol\n              }\n            })\n            let recentRec = getReccomendationResponse.data[0]\n            setSeries([recentRec.buy, recentRec.hold, recentRec.sell, recentRec.strongBuy,  recentRec.strongSell])\n            setDates(recentRec.period)\n        }\n        getRecommendations()\n    }, [])\n    \n    var state = {\n          \n        series: seriesData,\n        options: {\n          chart: {\n            width: 380,\n          },\n          dataLabels: {\n            enabled: false\n          },\n          title: {\n            text: `Stock Reccomendation as of ${dates}`,\n            style: {\n                fontSize:  '20px',\n                fontWeight:  'bold',\n                color:  '#263238'\n              },\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 200\n              },\n              legend: {\n                show: false\n              }\n            }\n          }],\n          labels: [\"Buy\", \"Hold\", \"Sell\", \"StrongBuy\", \"StrongSell\"],\n          legend: {\n            position: 'right',\n            offsetY: 0,\n            height: 230,\n          }\n        },\n      \n      \n      };\n    \n    \n\n    return (\n        <div id=\"chart\">\n            <ReactApexChart options={state.options} series={state.series} height={404} type=\"donut\" />\n        </div>\n    )\n}\n\nexport default StackChart   ","import React, { Fragment } from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Container, Divider } from '@material-ui/core';\nvar parse = require('html-react-parser');\n\nconst StockNewsList = (props) => {\n    const trimDate = (date) => {\n        return date.slice(0, -13)\n    }\n    return (\n        <Fragment>\n            <ListItem>\n                <div style={{direction: \"column\"}}>\n                    <a href={props.link} >{parse(props.title)}</a>\n                </div>\n                <ListItemText secondary={trimDate(props.date)} />\n            </ListItem>\n            <Divider/>\n        </Fragment>\n    )\n}\n\nexport default StockNewsList;\n","import React, {useState, createContext} from 'react';\n\nexport const CurrentStockContext = createContext();\n\nexport const CurrentStockContextProvider = props => {\n   const [currentStockInfo, setCurrentStockInfo] = useState(JSON.parse(localStorage.getItem('currentStockInfo')))\n\n//    useEffect(() => {\n//        setCurrentStockInfo()\n//    }, [])\n\n   return (\n       <CurrentStockContext.Provider value={{currentStockInfo, setCurrentStockInfo}}>\n           {props.children}\n       </CurrentStockContext.Provider>\n   )\n}\n\n","import React, {Fragment, useState, useEffect, useContext} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport BigStockChart from './bigStockChart';\nimport GetStocks from '../backendLink/getBackendURL'\nimport Button from '@material-ui/core/Button';\nimport { Container, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport StockCard from './stockCard';\nimport List from '@material-ui/core/List';\nimport Box from '@material-ui/core/Box'\nimport StackChart from './stackChart'\nimport StockNewsListItem from './stockNewsListItem.js'\nimport {CurrentStockContext} from '../context/currentStockContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    background: '#0C6BA7'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    background: '#C3EBF6'\n  },\n  button: {\n    margin: \"20px\",\n    color: \"#C3EBF6\",\n    background: \"rgb(64,80,181)\"\n  }\n}));\n\n\nconst ViewStock = () => {\n    const history = useHistory()\n    const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n    const [bigChartData, setBigChartData] = useState([]);\n    const [articles, setArticles] = useState([])\n    const {id, name} = useParams();\n    const classes = useStyles();\n\n\n\n    const onHandleBack = () => {\n        history.goBack();\n    }\n\n    useEffect( () => {\n        // let currentStockRow = JSON.parse(localStorage.getItem(\"currentStockInfo\"))\n        // setCurrentStockInfo(currentStockRow)\n        //setting up BigChart data\n        const fetchChartData = async (id, name) => {\n            try {\n                let response = await GetStocks.get(`/singlestock/${id}/${name}`)\n                setBigChartData(response.data)\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        //fetching News\n        const fetchNews = async (name) => {\n            try{\n            const getNewsResponse = await GetStocks.get('/singlestock/news', {\n                params: { stockName: name}\n            })\n            let getTopTenNewsArticles = (getNewsResponse.data).slice(0, 10)\n            setArticles(getTopTenNewsArticles)\n            }\n            catch (err)\n            {\n                console.log(\"No news\")\n            }\n        }\n        fetchChartData(id, name)\n        fetchNews(currentStockInfo.financialData.displayName)\n    }, [])\n    \n\n    return (\n        <div className={classes.root}>\n            <Button  onClick={onHandleBack} className={classes.button} variant=\"contained\" size=\"large\" color=\"black\">\n                <i className=\"fa-lg fas fa-angle-double-left\"></i>\n            </Button>   \n            <Container style={{maxWidth: \"1500px\"}}>\n                <Grid container spacing={3}>\n                    <Grid item lg={8}>\n                        <Paper className={classes.paper}>\n                            <BigStockChart id={id} name={name} generalData={currentStockInfo.financialData} bigChartData={bigChartData}/>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={4}>\n                        <Paper className={classes.paper}>\n                            <StockCard name={name} abbreviatedMarketCap={currentStockInfo.abMarketCap} cardData={currentStockInfo.financialData}/>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={6}>\n                        <Paper className={classes.paper}>\n                            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                                <Box p={2} flexGrow={1}  bgcolor=\"grey.300\">\n                                    Recent News\n                                </Box>\n                            </Box>\n                            {/* <StockNewsList/> */}\n                            <Paper style={{maxHeight: 330, overflow: 'auto'}}>\n                                <List>\n                                    {\n                                        articles && articles.map(item => (\n                                        <StockNewsListItem title={item.title} link={item.link} date={item.pubDate}/>))\n                                    }\n                                </List>\n                            </Paper>\n                        </Paper>\n                    </Grid>\n                    <Grid item lg={6}>\n                        <Paper className={classes.paper}>\n                            <StackChart symbol={name}/>\n                        </Paper>\n                    </Grid>\n                    </Grid>\n            </Container>\n            <Container>\n\n            </Container>\n            \n        </div>\n    )\n}\n\nexport default ViewStock\n","import React, {useState, createContext, useEffect} from 'react';\n\nexport const TableContext = createContext();\n\nexport const TableContextProvider = props => {\n    function createData(symbol, stockChange, marketCap, sharePrice, chart) {\n        return { symbol, stockChange, marketCap, sharePrice, chart};\n    }\n    const [rows, setRows] = useState(JSON.parse(localStorage.getItem('StockRows')))\n   useEffect(() => {\n       localStorage.setItem('StockRows', JSON.stringify(rows))\n   }, [rows])\n\n   return (\n       <TableContext.Provider value={{rows, setRows}}>\n           {props.children}\n       </TableContext.Provider>\n   )\n}\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst headCells = [\n  { id: 'symbol', direction: 'left', disablePadding: false, label: 'Stock Ticker' },\n  { id: 'stockChange', direction: 'right', disablePadding: false, label: 'Day Change' },\n  { id: 'marketCap', direction: 'right', disablePadding: false, label: 'marketCap (USD) ' },\n  { id: 'sharePrice', direction: 'right', disablePadding: false, label: 'Share Price (USD)' },\n  { id: 'chart', direction: 'center', disablePadding: true, label: 'Chart' },\n];\n\nfunction EnhancedTableHead(props) {\n    // number of selected  \n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all symbols' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.direction}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            { headCell.id !== 'chart' ? (\n                <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : 'asc'}\n                    onClick={createSortHandler(headCell.id)}\n                >\n                    {headCell.label}\n                    {orderBy === headCell.id ? (\n                    <span className={classes.visuallyHidden}>\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </span>\n                    ) : null}\n                </TableSortLabel>\n                ) : headCell.label\n            }\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {TableContext} from '../context/tableContext';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n    }));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {rows, setRows} = useContext(TableContext)\n    const {setSelected, selected, numSelected } = props;\n\n    const deleteRow = async () => {\n        console.log(selected);\n        const stayRowArray = props.rows.filter(row => \n            !selected.includes(row.symbol)\n        )\n\n        const deleteRowArray = props.rows.filter(row => {\n            if(selected.includes(row.symbol)) {\n                return row;\n            }\n        }).map(({chart}) => chart.stockId)\n        \n        setRows(stayRowArray);\n        // console.log(\"this is leftOver\", stayRowArray)\n        // console.log(selected)\n        setSelected([])\n    }\n\n    return (\n        <Toolbar\n        // className={clsx(classes.root, {\n        //     [classes.highlight]: numSelected > 0,\n        // })}\n        >\n        {numSelected > 0 ? (\n            <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n            </Typography>\n        ) : (\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n            Stocks\n            </Typography>\n        )}\n        {/* button for Deleting   */}\n        {numSelected > 0 ? (\n            <Tooltip title=\"Delete\">\n            <IconButton style={{color: \"white\"}} onClick={deleteRow} aria-label=\"delete\">\n                <DeleteIcon />\n            </IconButton>\n            </Tooltip>\n        ) : (\n            <Tooltip title=\"Filter list\">\n            <IconButton style={{color: \"white\"}} aria-label=\"filter list\">\n                <FilterListIcon />\n            </IconButton>\n            </Tooltip>\n        )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;\n","// uncomment this is for yahoo finance chart data initial stock aquiring\n\n// const calcDollarChange = (pricesArray) => {\n//   console.log(pricesArray[1].y[3] + \" \" + \"- \" + pricesArray[0].y[3])\n//   let dayDollarChange = pricesArray[1].y[3] - pricesArray[0].y[3]\n//   console.log(\"calcDollarChange\", dayDollarChange)\n//   return dayDollarChange\n// }\n\n// const calcPercChange = (pricesArray) => {\n//   console.log(pricesArray)\n//   console.log(pricesArray[1].y[3] + \" \" + \"/ \" + pricesArray[0].y[3])\n//   let dayDollarChange = (((pricesArray[1].y[3] / pricesArray[0].y[3]) - 1)*100)\n//   return dayDollarChange\n// }\n\n// const getCurrentPrice = (pricesArray) => {\n//   console.log(\"calcCurrentChange\", pricesArray)\n//   return pricesArray[0].y[3];\n// }\n\nexport const rearangeData = (tickerData) => {\n    let open = tickerData.o\n    let high = tickerData.h\n    let low = tickerData.l\n    let close = tickerData.c\n    var timeStamp = tickerData.t\n\n    // using finhub for month data\n    let candleStruct = open.map((o, i) => ({\n      x: new Date(timeStamp[i] * 1000),\n      y: [o, high[i], low[i], close[i]]\n    }));\n    \n    // let recentMonthData = candleStruct.slice(-22)\n    \n    // console.log(\"zip listing\",candleStruct)\n\n\n    let pracData = {\n      //uncomment this is for yahoo finance chart data initial stock aquiring\n\n      // diffDayChange: calcDollarChange(candleStruct.slice(-2)),\n      // currentPrice: getCurrentPrice(candleStruct.slice(-1)),\n      // dayPercChange: calcPercChange(candleStruct.slice(-2)),\n      // oneYearData: candleStruct,\n\n      //comment out if using yahoo as initial data aquiring\n      imageInfo: tickerData.imageInfo,\n      yahooSummaryData: tickerData.dataSummary,\n      priceChangePercent: tickerData.dataSummary.regularMarketChangePercent,\n      priceChange: tickerData.dataSummary.regularMarketChange, \n      marketCap: tickerData.dataSummary.marketCap,\n      currentPrice: tickerData.dataSummary.regularMarketPrice,\n      volume: tickerData.v,\n      symbol: tickerData.symbol,\n      stockId: tickerData.stockId,\n      series: [{\n        data: candleStruct\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false,\n          },\n          type: 'candlestick',\n          height: 350\n        },\n        // title: {\n        //   text: `${tickerData.symbol}`,\n        //   align: 'left'\n        // },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          forceNiceScale: true,\n          // floating: true,\n          // decimalsInFloat: true,\n          // floating: true,\n          decimalsInFloat: true,\n \n          tooltip: {\n            onDatasetHover: {\n              highlightDataSeries: false,\n          },\n            show: false,\n            enabled: false,\n          }\n          \n        }\n      },\n    };\n    // for(let i = 0; i < candleStruct.length; i++) {\n    //   pracData.series[0].data.push(candleStruct[i])\n    // }\n\n    return pracData;\n  }\n// exports.module = ModifyDataForChart;\n\n// export \n// module.exports = {\n//   test: ModifyDataForChart = (tickerData) => {\n//     let a = tickerData.o\n//     let b = tickerData.h\n//     let c = tickerData.l\n//     let d = tickerData.c\n//     var t = tickerData.t\n//     console.log(a)\n//     console.log(tickerData)\n//     let candleStruct = a.map((e, i) => ({\n//       x: new Date(t[i] * 1000),\n//       y: [e, b[i], c[i], d[i]]\n//     }));\n\n//     // console.log(\"zip listing\",candleStruct)\n//     let pracData = {\n//       stockId: tickerData.stockId,\n//       series: [{\n//         data: candleStruct\n//       }],\n//       options: {\n//         chart: {\n//           type: 'candlestick',\n//           height: 350\n//         },\n//         title: {\n//           text: `${tickerData.symbol}`,\n//           align: 'left'\n//         },\n//         xaxis: {\n//           type: 'datetime'\n//         },\n//         yaxis: {\n//           tooltip: {\n//             enabled: true\n//           }\n//         }\n//       },\n//     };\n//     // for(let i = 0; i < candleStruct.length; i++) {\n//     //   pracData.series[0].data.push(candleStruct[i])\n//     // }\n\n//     return pracData;\n//   }\n// }","import React, {Fragment, useState,Component, useEffect, useContext} from 'react'\nimport Chart from 'react-apexcharts'\nimport {CurrentStockContext} from '../context/currentStockContext';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst Charting = (props) => {\n    const {currentStockInfo, setCurrentStockInfo} = useContext(CurrentStockContext)\n    let history = useHistory()\n    \n    const viewStock = async (id, name, row) => {\n    let stringRow = JSON.stringify(row)\n    localStorage.setItem(\"currentStockInfo\", stringRow);\n    setCurrentStockInfo(JSON.parse(localStorage.getItem('currentStockInfo')))\n    history.push({\n        pathname: `/view/${id}/${name}`,\n        financialData: props.financialData,\n        abbreviatedMarketCap: props.abbreviatedMarketCap\n    })\n    }\n    \nreturn (\n\n    <div style={{display: \"flex\", alignItems: \"center\", padding: \"0\", margin: \"10\"}}>\n        <Chart options={props.data.options} series={props.data.series} type=\"candlestick\" height={125} width={300} />\n        <Button size=\"medium\" onClick={()=> viewStock(props.id, props.name, props.row)}>View More Info</Button>\n    </div>\n    )\n}\n\n\n\nexport default Charting;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 200,\n  },\n});\n\n\n\nconst HoverSymbol = (props) => {\n    const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image={props.image.logo}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.image.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.image.domain}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default HoverSymbol\n","import React, {useContext, useState, useEffect} from 'react';\nimport {TextField, Button} from '@material-ui/core/';\nimport Container from '@material-ui/core/Container';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {rearangeData} from '../sortDataFunctions/sortChartData';\nimport {TableContext} from '../context/tableContext';\nimport backendURL from '../backendLink/getBackendURL';\n\n\nconst HeaderSearch = () => {\n    const {rows, setRows} = useContext(TableContext);\n    const [currentTicker, setCurrentTicker] = useState('');\n    const [symbolError, setSymbolError] = useState(false);\n\n    // the function that grabs the rows\n    function createData(symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap) {\n        return { symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap};\n    }\n\n    function abbreviateNumber(value) {\n        let newValue = value;\n        if (value >= 1000) {\n            let suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n            let suffixNum = Math.floor( (\"\"+value).length/3 );\n            let shortValue = '';\n            for (let precision = 2; precision >= 1; precision--) {\n                shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\n                let dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\n                if (dotLessShortValue.length <= 2) { break; }\n            }\n            if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\n            newValue = shortValue+suffixes[suffixNum];\n        }\n        return newValue;\n    }\n\n    const onSubmitForm = async (event) => {\n        event.preventDefault();\n  \n        let submit = true;\n        rows.map(row => {\n          if((row.symbol) == currentTicker.trim()){\n            submit = false;\n          }\n        })\n        if(submit) {\n          let now = new Date().getTime()\n          let current = parseInt(now/1000)\n          let month = current - (86400 * 31)\n  \n          //vestigal adding of uneeded user_id\n          const addingResponse = await backendURL.post('/', {\n            user_id: '1',\n            ticker: currentTicker,\n            from: month,\n            to: current\n          })\n  \n          if(addingResponse.data.length == 0) {\n            console.log(\"ticker not supported\")\n            setSymbolError(true)\n          } else {\n            setSymbolError(false)\n            const responseData = rearangeData(addingResponse.data)\n            setRows((prevRows) => \n              [...prevRows,...[createData(`${currentTicker}`,\n                responseData.priceChange,\n                responseData.marketCap,\n                responseData.currentPrice,\n                {\n                stockId: responseData.stockId,\n                options: responseData.options,\n                series: responseData.series\n                },\n                responseData.yahooSummaryData,\n                responseData.imageInfo,\n                responseData.stockId,\n                abbreviateNumber(responseData.marketCap)\n                )\n              ]])\n          }\n        }\n        else {\n          console.log(\"Already entered the stock\")\n        }\n        setCurrentTicker('');\n      }\n    return (\n        <div className=\"header\">\n            <Container className=\"header\" maxWidth=\"sm\" className=\"text-center\">\n              <h1 >Welcome to your stock portfolio</h1>\n                  {/* input */}\n                  <form onSubmit={onSubmitForm} noValidate autoComplete=\"off\">\n                      <div className=\"searchTool\">\n                        {!symbolError ? (\n                          <TextField id=\"standard-basic\"\n                            label=\"Please Enter your stock ticker\"\n                            text=\"text\" className=\"form-control\"\n                            value={currentTicker} \n                            onChange={e => setCurrentTicker(e.target.value)}/>\n                          ) : (\n                            <TextField\n                            error\n                            className=\"form-control\"\n                            id=\"standard-error-helper-text\"\n                            label=\"Ticker not supported\"\n                            value={currentTicker} \n                            onChange={e => setCurrentTicker(e.target.value)}\n                          />\n                          ) \n                        }\n                          <ButtonGroup\n                              color=\"primary\"\n                              aria-label=\"contained primary button group\"\n                              variant=\"contained\"\n                          >\n                          <Button color=\"primary\" type=\"submit\">Add</Button>\n                          </ButtonGroup>\n                      </div>\n                  </form>\n            </Container>\n        </div>\n    )\n}\n\nexport default HeaderSearch\n","import React, {useContext, useState, useEffect} from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {TableContext} from '../context/tableContext';\nimport EnhancedTableHead from './tableHead'\nimport EnhancedTableToolbar from './tableToolBar'\nimport Container from '@material-ui/core/Container';\nimport GetStocks from '../backendLink/getBackendURL'\nimport {rearangeData} from '../sortDataFunctions/sortChartData';\nimport ViewInfo from './rowChart';\nimport StockArrow from './stockArrow';\nimport '../styles/tableStyle.css'\nimport '../styles/style.css'\nimport ReactHover from 'react-hover'\nimport HoverSymbol from './hoverSymbol';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grow from '@material-ui/core/Grow';\nimport SearchHeader from './headerSearch'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      background: '#0C6BA7'\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n      border: \"2px solid #0C6BA7\"\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }));\n  \nconst EnhancedTable = () => {\n    const {rows, setRows} = useContext(TableContext)\n    \n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('stockChange');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(true);\n    const [chartWidth, setChartWidth] =  React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    // const [currentTicker, setCurrentTicker] = React.useState('');\n    // const [symbolError, setSymbolError] = React.useState(false)\n    const [loading, setLoading] = React.useState(false)\n     \n\n    function abbreviateNumber(value) {\n      let newValue = value;\n      if (value >= 1000) {\n          let suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n          let suffixNum = Math.floor( (\"\"+value).length/3 );\n          let shortValue = '';\n          for (let precision = 2; precision >= 1; precision--) {\n              shortValue = parseFloat( (suffixNum != 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\n              let dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\n              if (dotLessShortValue.length <= 2) { break; }\n          }\n          if (shortValue % 1 != 0)  shortValue = shortValue.toFixed(1);\n          newValue = shortValue+suffixes[suffixNum];\n      }\n      return newValue;\n    }\n\n    // the function that grabs the rows\n    function createData(symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap) {\n      return { symbol, stockChange, marketCap, sharePrice, chart, financialData, imageInfo, stockId, abMarketCap};\n    }\n\n    useEffect( () => {\n      let rowStorage = JSON.parse(localStorage.getItem('StockRows'))\n      const fetchData = async () => {\n          try{\n              //initiate the date for to and from for api call\n              const now = new Date().getTime()\n              const current = parseInt(now/1000)\n              const month = current - (86400 * 31)\n              const stockSymbols = rowStorage.map(item => item.symbol)\n              const totalStockInfoResponse = await GetStocks.get('/', {\n                  params:{ list: stockSymbols, from: month, to: current}\n              })\n\n              const totalModifiedStockData = totalStockInfoResponse.data[0]\n                  .map(element => rearangeData(element))\n              let formattedRows = totalModifiedStockData.map(row => {\n                return createData(row.symbol, row.priceChange, row.marketCap, row.currentPrice, {stockId: row.stockId, options: row.options, series: row.series}, row.yahooSummaryData, row.imageInfo, row.stockId, abbreviateNumber(row.marketCap))\n              })\n              setLoading(true)\n              setRows(formattedRows);\n          } catch(err) {\n              console.log(\"thi is an error, \", err);\n              //do a small alert that says, please refresh\n          }\n      };\n      if(rowStorage && (rowStorage.length !== 0) ) {\n        fetchData()\n      } else {\n        setLoading(true)\n      }\n    }, []);\n\n\n\n    // function that descends the rows\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n  \n    \n    //function that compares to descend\n    function getComparator(order, orderBy) {\n      return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n      const stabilizedThis = array.map((el, index) => [el, index]);\n      stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n      });\n      return stabilizedThis.map((el) => el[0]);\n    }\n\n    const handleRequestSort = (event, property) => {\n      const isAsc = orderBy === property && order === 'asc';\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    };\n  \n    const handleSelectAllClick = (event) => {\n      if (event.target.checked) {\n        const newSelecteds = rows.map((n) => n.symbol);\n        setSelected(newSelecteds);\n        return;\n      }\n      setSelected([]);\n    };\n  \n    const handleClick = (event, symbol) => {\n      const selectedIndex = selected.indexOf(symbol);\n      let newSelected = [];\n  \n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, symbol);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1),\n        );\n      }\n  \n      setSelected(newSelected);\n    };\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event) => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n  \n    const handleChangeDense = (event) => {\n      setDense(event.target.checked);\n    };\n\n    const handleChangeWidth = (event) => {\n      setChartWidth(event.target.checked);\n    };\n  \n    const isSelected = (symbol) => selected.indexOf(symbol) !== -1;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    \n    const optionsCursorTrueWithMargin = {\n      followCursor: true,\n      shiftX: 10,\n      shiftY: 0\n    }\n    return (\n      \n      <div className={classes.root}>\n        {/* header */}\n        <SearchHeader/>\n        <Container maxWidth={chartWidth ? false : 'lg'}>\n          <Paper className={classes.paper}>\n            \n            <EnhancedTableToolbar rows={rows} setSelected={setSelected} selected={selected} numSelected={selected.length} />\n            {loading ? (false) : (\n              <div className=\"loadingTable\">\n                <LinearProgress style={{width: \"100%\"}} />\n              </div>)}\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? 'small' : 'medium'}\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      const isItemSelected = isSelected(row.symbol);\n                      const labelId = `enhanced-table-checkbox-${index}`;\n                      return (\n                        <Grow\n                        in={rows}\n                        style={{ transformOrigin: '0 0 0' }}\n                        {...(rows ? { timeout: 1000 } : [])}\n                        > \n                        <TableRow\n                          hover\n                          onClick={(event) => handleClick(event, row.symbol)}\n                          role=\"checkbox\"\n                          aria-checked={isItemSelected}\n                          tabIndex={-1}\n                          key={row.symbol}\n                          selected={isItemSelected}\n                        >\n                        \n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                          </TableCell>\n                          <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              <div style={{display:\"flex\"}}>\n                                <ReactHover\n                                    options={optionsCursorTrueWithMargin}>\n                                    <ReactHover.Trigger type='trigger'>\n                                      <div><h2>{row.symbol}</h2></div>\n                                    </ReactHover.Trigger>\n                                    <ReactHover.Hover type='hover'>\n                                      <HoverSymbol image={row.imageInfo}/>\n                                    </ReactHover.Hover>\n                                </ReactHover>\n                              </div>\n                          </TableCell>\n                          <TableCell align=\"right\"><StockArrow break={true} dollarChange={row.financialData.regularMarketChange} percentageChange={row.financialData.regularMarketChangePercent}/></TableCell>\n                          <TableCell align=\"right\">{abbreviateNumber(row.marketCap)}</TableCell>\n                          <TableCell align=\"right\">{row.sharePrice}</TableCell>\n                          <TableCell className=\"expand-trigger\" align=\"right\">\n                            <ViewInfo\n                              row={row} \n                              data={row.chart}\n                              id={row.chart.stockId}\n                              name={row.symbol}\n                              abbreviatedMarketCap = {abbreviateNumber(row.marketCap)}\n                              financialData={row.financialData}\n                            >\n                            </ViewInfo>\n                          </TableCell>\n                        </TableRow>\n                        </Grow>\n                      );\n                    })\n                }\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n          </Paper>\n        </Container>\n        <Container className=\"tableFormControl\">\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Decrease Chart Spacing\"\n          />\n          <FormControlLabel\n            control={<Switch checked={chartWidth} onChange={handleChangeWidth} />}\n            label=\"Increase Chart Width\"\n          />\n        </Container>\n      </div>\n    );\n  }\n  \nexport default EnhancedTable;","import React from 'react'\nimport StockTable from './stockTable'\nconst HomePage = () => {\n    return (\n        <div>\n            <StockTable/>\n        </div>\n    )\n}\n\nexport default HomePage;\n","import React, {useRef} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport indicators from \"highcharts/indicators/indicators-all.js\";\nimport dragPanes from \"highcharts/modules/drag-panes.js\";\nimport annotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\nimport priceIndicator from \"highcharts/modules/price-indicator.js\";\nimport fullScreen from \"highcharts/modules/full-screen.js\";\nimport stockTools from \"highcharts/modules/stock-tools.js\";\nimport downloadFile from  \"highcharts/modules/exporting\"\nimport Highchartsd from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport { red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box'\n\n\n\n// init the module\nindicators(Highchartsd);\ndragPanes(Highchartsd);\nannotationsAdvanced(Highchartsd);\npriceIndicator(Highchartsd);\nfullScreen(Highchartsd);\nstockTools(Highchartsd);\n\n// DownloadFile(Highchartsd);\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#0C6BA7\"\n  },\n  button: {\n    color: \"#C3EBF6\",\n    background: \"rgb(64,80,181)\"\n  }\n}));  \n\nconst InteractiveChart = (props) => {\n    const chart = useRef(null);\n    const history = useHistory()\n    const classes = useStyles();\n    \n  var data = props.location.state.stockData;\n  \n  var ohlc = [],\n    volume = [],\n    dataLength = data.length,\n    groupingUnits = [\n      [\n        \"week\", // unit name\n        [1] // allowed multiples\n      ],\n      [\"month\", [1, 2, 3, 4, 6]]\n    ],\n    i = 0;\n  \n  for (i; i < dataLength; i += 1) {\n    ohlc.push([\n      data[i][0], // the date\n      data[i][1], // open\n      data[i][2], // high\n      data[i][3], // low\n      data[i][4] // close\n    ]);\n  \n    volume.push([\n      data[i][0], // the date\n      data[i][5] // the volume\n    ]);\n  }\n  \n  // Highcharts.stockChart('container',\nconst options = {\n    navigation: {\n      bindingsClassName: 'chart-1'\n    },\n    yAxis: [{\n      labels: {\n        align: 'left'\n      },\n      height: '80%',\n      resize: {\n        enabled: true\n      }\n    }, {\n      labels: {\n        align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n        var chart = this.chart,\n          position;\n  \n        if (point.isHeader) {\n          position = {\n            x: Math.max(\n              // Left side limit\n              chart.plotLeft,\n              Math.min(\n                point.plotX + chart.plotLeft - width / 2,\n                // Right side limit\n                chart.chartWidth - width - chart.marginRight\n              )\n            ),\n            y: point.plotY\n          };\n        } else {\n          position = {\n            x: point.series.chart.plotLeft,\n            y: point.series.yAxis.top - chart.plotTop\n          };\n        }\n  \n        return position;\n      }\n    },\n    chart: {height: 800},\n    series: [{\n      type: 'ohlc',\n      id: 'aapl-ohlc',\n      name: 'AAPL Stock Price',\n      data: ohlc\n    }, {\n      type: 'column',\n      id: 'aapl-volume',\n      name: 'AAPL Volume',\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 800\n        },\n        chartOptions: {\n          rangeSelector: {\n            inputEnabled: false\n          }\n        }\n      }]\n    }\n  };\n\n  const onHandleBack = () => {\n    console.log(\"hello\")\n    history.goBack();\n  }\n  \n  return (\n      <div className={classes.root}>\n        <Box display=\"flex\" p={1} color=\"#0C6BA7\">\n              <Box p={1} flexGrow={1}  bgcolor=\"#0C6BA7\">\n                <Button onClick={onHandleBack} className={classes.button} variant=\"contained\" size=\"large\" color=\"black\">\n                  <i className=\"fa-lg fas fa-angle-double-left\"></i>\n                </Button>\n              </Box>\n              <Box p={.5}  display=\"flex\" justifyContent=\"center\"  bgcolor=\"grey.300\">\n                <p style={{marginBottom: \"0\"}}>Note: For best interactivity, please full screen the Chart</p>\n              </Box>\n        </Box>\n          <HighchartsReact options={options} constructorType={'stockChart'} highcharts={Highchartsd} />\n      </div>\n  )\n}\n\nexport default InteractiveChart;\n","import React from 'react';\nimport './App.css';\nimport ViewStock from './components/viewStock'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'; \nimport {TableContextProvider} from './context/tableContext'\nimport {CurrentStockContextProvider} from './context/currentStockContext'\nimport HomePage from './components/homePage'\nimport InteractiveBigChart from './components/interactiveChart'\n\nfunction App() {\n  return (\n    \n    <TableContextProvider>\n      <CurrentStockContextProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route exact path=\"/view/:id/:name/\" component={ViewStock}></Route>\n          <Route exact path=\"/view/interactive/:id/:name/\" component={InteractiveBigChart}></Route>\n        </Switch>\n      </Router>\n      </CurrentStockContextProvider>\n    </TableContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Router, Switch, Route} from 'react-router-dom'; \n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // {/* </React.StrictMode>, */}\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}